/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4158796.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 4.0], [7.9, 4.0], [8.0, 4.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 5.0], [11.1, 5.0], [11.2, 5.0], [11.3, 5.0], [11.4, 5.0], [11.5, 5.0], [11.6, 5.0], [11.7, 5.0], [11.8, 5.0], [11.9, 5.0], [12.0, 5.0], [12.1, 5.0], [12.2, 5.0], [12.3, 5.0], [12.4, 5.0], [12.5, 5.0], [12.6, 5.0], [12.7, 5.0], [12.8, 5.0], [12.9, 5.0], [13.0, 5.0], [13.1, 5.0], [13.2, 5.0], [13.3, 5.0], [13.4, 5.0], [13.5, 5.0], [13.6, 5.0], [13.7, 5.0], [13.8, 5.0], [13.9, 5.0], [14.0, 5.0], [14.1, 5.0], [14.2, 5.0], [14.3, 6.0], [14.4, 6.0], [14.5, 6.0], [14.6, 6.0], [14.7, 6.0], [14.8, 6.0], [14.9, 6.0], [15.0, 6.0], [15.1, 6.0], [15.2, 6.0], [15.3, 6.0], [15.4, 6.0], [15.5, 6.0], [15.6, 6.0], [15.7, 6.0], [15.8, 6.0], [15.9, 6.0], [16.0, 6.0], [16.1, 6.0], [16.2, 6.0], [16.3, 6.0], [16.4, 6.0], [16.5, 6.0], [16.6, 6.0], [16.7, 6.0], [16.8, 6.0], [16.9, 6.0], [17.0, 6.0], [17.1, 6.0], [17.2, 7.0], [17.3, 7.0], [17.4, 7.0], [17.5, 7.0], [17.6, 7.0], [17.7, 7.0], [17.8, 7.0], [17.9, 7.0], [18.0, 7.0], [18.1, 7.0], [18.2, 7.0], [18.3, 7.0], [18.4, 7.0], [18.5, 7.0], [18.6, 7.0], [18.7, 7.0], [18.8, 7.0], [18.9, 7.0], [19.0, 7.0], [19.1, 7.0], [19.2, 7.0], [19.3, 7.0], [19.4, 7.0], [19.5, 7.0], [19.6, 8.0], [19.7, 8.0], [19.8, 8.0], [19.9, 8.0], [20.0, 8.0], [20.1, 8.0], [20.2, 8.0], [20.3, 8.0], [20.4, 8.0], [20.5, 8.0], [20.6, 8.0], [20.7, 8.0], [20.8, 8.0], [20.9, 8.0], [21.0, 8.0], [21.1, 8.0], [21.2, 8.0], [21.3, 8.0], [21.4, 8.0], [21.5, 8.0], [21.6, 8.0], [21.7, 9.0], [21.8, 9.0], [21.9, 9.0], [22.0, 9.0], [22.1, 9.0], [22.2, 9.0], [22.3, 9.0], [22.4, 9.0], [22.5, 9.0], [22.6, 9.0], [22.7, 9.0], [22.8, 9.0], [22.9, 9.0], [23.0, 9.0], [23.1, 9.0], [23.2, 9.0], [23.3, 9.0], [23.4, 9.0], [23.5, 10.0], [23.6, 10.0], [23.7, 10.0], [23.8, 10.0], [23.9, 10.0], [24.0, 10.0], [24.1, 10.0], [24.2, 10.0], [24.3, 10.0], [24.4, 10.0], [24.5, 10.0], [24.6, 10.0], [24.7, 10.0], [24.8, 10.0], [24.9, 10.0], [25.0, 10.0], [25.1, 10.0], [25.2, 11.0], [25.3, 11.0], [25.4, 11.0], [25.5, 11.0], [25.6, 11.0], [25.7, 11.0], [25.8, 11.0], [25.9, 11.0], [26.0, 11.0], [26.1, 11.0], [26.2, 11.0], [26.3, 11.0], [26.4, 11.0], [26.5, 11.0], [26.6, 11.0], [26.7, 12.0], [26.8, 12.0], [26.9, 12.0], [27.0, 12.0], [27.1, 12.0], [27.2, 12.0], [27.3, 12.0], [27.4, 12.0], [27.5, 12.0], [27.6, 12.0], [27.7, 12.0], [27.8, 12.0], [27.9, 12.0], [28.0, 13.0], [28.1, 13.0], [28.2, 13.0], [28.3, 13.0], [28.4, 13.0], [28.5, 13.0], [28.6, 13.0], [28.7, 13.0], [28.8, 13.0], [28.9, 13.0], [29.0, 13.0], [29.1, 13.0], [29.2, 13.0], [29.3, 14.0], [29.4, 14.0], [29.5, 14.0], [29.6, 14.0], [29.7, 14.0], [29.8, 14.0], [29.9, 14.0], [30.0, 14.0], [30.1, 14.0], [30.2, 14.0], [30.3, 14.0], [30.4, 15.0], [30.5, 15.0], [30.6, 15.0], [30.7, 15.0], [30.8, 15.0], [30.9, 15.0], [31.0, 15.0], [31.1, 15.0], [31.2, 15.0], [31.3, 15.0], [31.4, 16.0], [31.5, 16.0], [31.6, 16.0], [31.7, 16.0], [31.8, 16.0], [31.9, 16.0], [32.0, 16.0], [32.1, 16.0], [32.2, 16.0], [32.3, 16.0], [32.4, 17.0], [32.5, 17.0], [32.6, 17.0], [32.7, 17.0], [32.8, 17.0], [32.9, 17.0], [33.0, 17.0], [33.1, 17.0], [33.2, 18.0], [33.3, 18.0], [33.4, 18.0], [33.5, 18.0], [33.6, 18.0], [33.7, 18.0], [33.8, 18.0], [33.9, 18.0], [34.0, 19.0], [34.1, 19.0], [34.2, 19.0], [34.3, 19.0], [34.4, 19.0], [34.5, 19.0], [34.6, 20.0], [34.7, 20.0], [34.8, 20.0], [34.9, 20.0], [35.0, 20.0], [35.1, 20.0], [35.2, 21.0], [35.3, 21.0], [35.4, 21.0], [35.5, 21.0], [35.6, 21.0], [35.7, 22.0], [35.8, 22.0], [35.9, 22.0], [36.0, 22.0], [36.1, 22.0], [36.2, 23.0], [36.3, 23.0], [36.4, 23.0], [36.5, 24.0], [36.6, 24.0], [36.7, 24.0], [36.8, 25.0], [36.9, 25.0], [37.0, 25.0], [37.1, 26.0], [37.2, 26.0], [37.3, 27.0], [37.4, 27.0], [37.5, 28.0], [37.6, 28.0], [37.7, 29.0], [37.8, 29.0], [37.9, 30.0], [38.0, 31.0], [38.1, 31.0], [38.2, 32.0], [38.3, 33.0], [38.4, 34.0], [38.5, 35.0], [38.6, 37.0], [38.7, 38.0], [38.8, 39.0], [38.9, 41.0], [39.0, 42.0], [39.1, 44.0], [39.2, 46.0], [39.3, 48.0], [39.4, 50.0], [39.5, 53.0], [39.6, 56.0], [39.7, 61.0], [39.8, 65.0], [39.9, 71.0], [40.0, 77.0], [40.1, 82.0], [40.2, 86.0], [40.3, 90.0], [40.4, 96.0], [40.5, 105.0], [40.6, 137.0], [40.7, 276.0], [40.8, 320.0], [40.9, 326.0], [41.0, 329.0], [41.1, 332.0], [41.2, 334.0], [41.3, 336.0], [41.4, 337.0], [41.5, 339.0], [41.6, 340.0], [41.7, 341.0], [41.8, 342.0], [41.9, 343.0], [42.0, 345.0], [42.1, 346.0], [42.2, 347.0], [42.3, 348.0], [42.4, 349.0], [42.5, 349.0], [42.6, 350.0], [42.7, 351.0], [42.8, 352.0], [42.9, 353.0], [43.0, 354.0], [43.1, 355.0], [43.2, 356.0], [43.3, 357.0], [43.4, 358.0], [43.5, 359.0], [43.6, 360.0], [43.7, 361.0], [43.8, 361.0], [43.9, 363.0], [44.0, 364.0], [44.1, 365.0], [44.2, 366.0], [44.3, 367.0], [44.4, 369.0], [44.5, 370.0], [44.6, 372.0], [44.7, 373.0], [44.8, 375.0], [44.9, 377.0], [45.0, 379.0], [45.1, 381.0], [45.2, 383.0], [45.3, 386.0], [45.4, 389.0], [45.5, 393.0], [45.6, 397.0], [45.7, 403.0], [45.8, 409.0], [45.9, 417.0], [46.0, 438.0], [46.1, 897.0], [46.2, 951.0], [46.3, 960.0], [46.4, 967.0], [46.5, 972.0], [46.6, 977.0], [46.7, 981.0], [46.8, 985.0], [46.9, 990.0], [47.0, 994.0], [47.1, 998.0], [47.2, 1003.0], [47.3, 1008.0], [47.4, 1013.0], [47.5, 1019.0], [47.6, 1025.0], [47.7, 1032.0], [47.8, 1040.0], [47.9, 1046.0], [48.0, 1053.0], [48.1, 1060.0], [48.2, 1068.0], [48.3, 1076.0], [48.4, 1084.0], [48.5, 1095.0], [48.6, 1107.0], [48.7, 1122.0], [48.8, 1140.0], [48.9, 1164.0], [49.0, 1191.0], [49.1, 1218.0], [49.2, 1245.0], [49.3, 1276.0], [49.4, 1328.0], [49.5, 1368.0], [49.6, 1393.0], [49.7, 1428.0], [49.8, 1512.0], [49.9, 1624.0], [50.0, 1643.0], [50.1, 1657.0], [50.2, 1670.0], [50.3, 1682.0], [50.4, 1694.0], [50.5, 1706.0], [50.6, 1719.0], [50.7, 1732.0], [50.8, 1749.0], [50.9, 1768.0], [51.0, 1792.0], [51.1, 1828.0], [51.2, 1884.0], [51.3, 1919.0], [51.4, 1939.0], [51.5, 1952.0], [51.6, 1962.0], [51.7, 1969.0], [51.8, 1976.0], [51.9, 1980.0], [52.0, 1985.0], [52.1, 1990.0], [52.2, 1994.0], [52.3, 1998.0], [52.4, 2002.0], [52.5, 2006.0], [52.6, 2010.0], [52.7, 2014.0], [52.8, 2018.0], [52.9, 2023.0], [53.0, 2027.0], [53.1, 2031.0], [53.2, 2037.0], [53.3, 2042.0], [53.4, 2048.0], [53.5, 2054.0], [53.6, 2061.0], [53.7, 2068.0], [53.8, 2076.0], [53.9, 2085.0], [54.0, 2095.0], [54.1, 2106.0], [54.2, 2117.0], [54.3, 2131.0], [54.4, 2149.0], [54.5, 2171.0], [54.6, 2202.0], [54.7, 2243.0], [54.8, 2289.0], [54.9, 2322.0], [55.0, 2342.0], [55.1, 2359.0], [55.2, 2373.0], [55.3, 2386.0], [55.4, 2398.0], [55.5, 2409.0], [55.6, 2422.0], [55.7, 2436.0], [55.8, 2453.0], [55.9, 2473.0], [56.0, 2499.0], [56.1, 2526.0], [56.2, 2554.0], [56.3, 2580.0], [56.4, 2600.0], [56.5, 2618.0], [56.6, 2634.0], [56.7, 2647.0], [56.8, 2657.0], [56.9, 2666.0], [57.0, 2674.0], [57.1, 2683.0], [57.2, 2692.0], [57.3, 2700.0], [57.4, 2707.0], [57.5, 2715.0], [57.6, 2724.0], [57.7, 2733.0], [57.8, 2742.0], [57.9, 2752.0], [58.0, 2763.0], [58.1, 2774.0], [58.2, 2787.0], [58.3, 2801.0], [58.4, 2815.0], [58.5, 2831.0], [58.6, 2848.0], [58.7, 2867.0], [58.8, 2884.0], [58.9, 2903.0], [59.0, 2919.0], [59.1, 2934.0], [59.2, 2949.0], [59.3, 2963.0], [59.4, 2974.0], [59.5, 2984.0], [59.6, 2994.0], [59.7, 3002.0], [59.8, 3010.0], [59.9, 3018.0], [60.0, 3027.0], [60.1, 3035.0], [60.2, 3043.0], [60.3, 3052.0], [60.4, 3060.0], [60.5, 3069.0], [60.6, 3078.0], [60.7, 3087.0], [60.8, 3096.0], [60.9, 3106.0], [61.0, 3117.0], [61.1, 3128.0], [61.2, 3140.0], [61.3, 3151.0], [61.4, 3166.0], [61.5, 3179.0], [61.6, 3195.0], [61.7, 3212.0], [61.8, 3231.0], [61.9, 3253.0], [62.0, 3274.0], [62.1, 3295.0], [62.2, 3316.0], [62.3, 3335.0], [62.4, 3351.0], [62.5, 3366.0], [62.6, 3382.0], [62.7, 3399.0], [62.8, 3412.0], [62.9, 3427.0], [63.0, 3442.0], [63.1, 3461.0], [63.2, 3479.0], [63.3, 3498.0], [63.4, 3515.0], [63.5, 3535.0], [63.6, 3554.0], [63.7, 3571.0], [63.8, 3588.0], [63.9, 3605.0], [64.0, 3622.0], [64.1, 3638.0], [64.2, 3653.0], [64.3, 3669.0], [64.4, 3684.0], [64.5, 3697.0], [64.6, 3710.0], [64.7, 3723.0], [64.8, 3736.0], [64.9, 3749.0], [65.0, 3764.0], [65.1, 3778.0], [65.2, 3792.0], [65.3, 3811.0], [65.4, 3831.0], [65.5, 3849.0], [65.6, 3869.0], [65.7, 3889.0], [65.8, 3908.0], [65.9, 3926.0], [66.0, 3945.0], [66.1, 3963.0], [66.2, 3981.0], [66.3, 3999.0], [66.4, 4016.0], [66.5, 4033.0], [66.6, 4049.0], [66.7, 4066.0], [66.8, 4083.0], [66.9, 4100.0], [67.0, 4118.0], [67.1, 4135.0], [67.2, 4153.0], [67.3, 4171.0], [67.4, 4189.0], [67.5, 4209.0], [67.6, 4231.0], [67.7, 4254.0], [67.8, 4276.0], [67.9, 4293.0], [68.0, 4307.0], [68.1, 4320.0], [68.2, 4331.0], [68.3, 4341.0], [68.4, 4351.0], [68.5, 4364.0], [68.6, 4377.0], [68.7, 4393.0], [68.8, 4411.0], [68.9, 4430.0], [69.0, 4452.0], [69.1, 4474.0], [69.2, 4500.0], [69.3, 4527.0], [69.4, 4554.0], [69.5, 4579.0], [69.6, 4608.0], [69.7, 4633.0], [69.8, 4659.0], [69.9, 4680.0], [70.0, 4697.0], [70.1, 4713.0], [70.2, 4731.0], [70.3, 4750.0], [70.4, 4768.0], [70.5, 4786.0], [70.6, 4805.0], [70.7, 4827.0], [70.8, 4847.0], [70.9, 4870.0], [71.0, 4895.0], [71.1, 4920.0], [71.2, 4944.0], [71.3, 4964.0], [71.4, 4981.0], [71.5, 4997.0], [71.6, 5010.0], [71.7, 5022.0], [71.8, 5034.0], [71.9, 5045.0], [72.0, 5055.0], [72.1, 5066.0], [72.2, 5079.0], [72.3, 5091.0], [72.4, 5106.0], [72.5, 5122.0], [72.6, 5139.0], [72.7, 5157.0], [72.8, 5178.0], [72.9, 5201.0], [73.0, 5224.0], [73.1, 5248.0], [73.2, 5278.0], [73.3, 5308.0], [73.4, 5337.0], [73.5, 5367.0], [73.6, 5389.0], [73.7, 5410.0], [73.8, 5432.0], [73.9, 5453.0], [74.0, 5474.0], [74.1, 5497.0], [74.2, 5522.0], [74.3, 5545.0], [74.4, 5571.0], [74.5, 5599.0], [74.6, 5628.0], [74.7, 5652.0], [74.8, 5673.0], [74.9, 5693.0], [75.0, 5715.0], [75.1, 5737.0], [75.2, 5759.0], [75.3, 5779.0], [75.4, 5798.0], [75.5, 5818.0], [75.6, 5839.0], [75.7, 5862.0], [75.8, 5887.0], [75.9, 5910.0], [76.0, 5936.0], [76.1, 5961.0], [76.2, 5989.0], [76.3, 6014.0], [76.4, 6039.0], [76.5, 6062.0], [76.6, 6085.0], [76.7, 6111.0], [76.8, 6133.0], [76.9, 6157.0], [77.0, 6181.0], [77.1, 6208.0], [77.2, 6233.0], [77.3, 6261.0], [77.4, 6293.0], [77.5, 6324.0], [77.6, 6361.0], [77.7, 6397.0], [77.8, 6433.0], [77.9, 6470.0], [78.0, 6504.0], [78.1, 6541.0], [78.2, 6578.0], [78.3, 6615.0], [78.4, 6655.0], [78.5, 6690.0], [78.6, 6725.0], [78.7, 6760.0], [78.8, 6796.0], [78.9, 6829.0], [79.0, 6869.0], [79.1, 6906.0], [79.2, 6947.0], [79.3, 6994.0], [79.4, 7042.0], [79.5, 7090.0], [79.6, 7144.0], [79.7, 7200.0], [79.8, 7257.0], [79.9, 7320.0], [80.0, 7380.0], [80.1, 7442.0], [80.2, 7504.0], [80.3, 7582.0], [80.4, 7664.0], [80.5, 7740.0], [80.6, 7812.0], [80.7, 7889.0], [80.8, 7956.0], [80.9, 8029.0], [81.0, 8099.0], [81.1, 8174.0], [81.2, 8253.0], [81.3, 8335.0], [81.4, 8388.0], [81.5, 8435.0], [81.6, 8472.0], [81.7, 8514.0], [81.8, 8563.0], [81.9, 8620.0], [82.0, 8687.0], [82.1, 8764.0], [82.2, 8827.0], [82.3, 8880.0], [82.4, 8934.0], [82.5, 9002.0], [82.6, 9058.0], [82.7, 9106.0], [82.8, 9147.0], [82.9, 9181.0], [83.0, 9221.0], [83.1, 9258.0], [83.2, 9302.0], [83.3, 9364.0], [83.4, 9428.0], [83.5, 9488.0], [83.6, 9546.0], [83.7, 9603.0], [83.8, 9662.0], [83.9, 9722.0], [84.0, 9774.0], [84.1, 9830.0], [84.2, 9882.0], [84.3, 9932.0], [84.4, 9984.0], [84.5, 10041.0], [84.6, 10095.0], [84.7, 10158.0], [84.8, 10215.0], [84.9, 10274.0], [85.0, 10336.0], [85.1, 10403.0], [85.2, 10483.0], [85.3, 10557.0], [85.4, 10612.0], [85.5, 10627.0], [85.6, 10638.0], [85.7, 10649.0], [85.8, 10663.0], [85.9, 10681.0], [86.0, 10711.0], [86.1, 10763.0], [86.2, 10831.0], [86.3, 10908.0], [86.4, 10996.0], [86.5, 11094.0], [86.6, 11200.0], [86.7, 11299.0], [86.8, 11366.0], [86.9, 11450.0], [87.0, 11566.0], [87.1, 11632.0], [87.2, 11651.0], [87.3, 11665.0], [87.4, 11682.0], [87.5, 11709.0], [87.6, 11760.0], [87.7, 11856.0], [87.8, 11988.0], [87.9, 12137.0], [88.0, 12277.0], [88.1, 12366.0], [88.2, 12467.0], [88.3, 12615.0], [88.4, 12782.0], [88.5, 12949.0], [88.6, 13161.0], [88.7, 13368.0], [88.8, 13606.0], [88.9, 13674.0], [89.0, 13703.0], [89.1, 13758.0], [89.2, 13949.0], [89.3, 14250.0], [89.4, 14485.0], [89.5, 14985.0], [89.6, 15557.0], [89.7, 16197.0], [89.8, 16634.0], [89.9, 16818.0], [90.0, 17127.0], [90.1, 17340.0], [90.2, 17480.0], [90.3, 17683.0], [90.4, 17787.0], [90.5, 17880.0], [90.6, 18027.0], [90.7, 18204.0], [90.8, 18393.0], [90.9, 18568.0], [91.0, 18802.0], [91.1, 19078.0], [91.2, 19336.0], [91.3, 19644.0], [91.4, 20047.0], [91.5, 20517.0], [91.6, 21031.0], [91.7, 21586.0], [91.8, 22413.0], [91.9, 23977.0], [92.0, 25597.0], [92.1, 26305.0], [92.2, 30099.0], [92.3, 32725.0], [92.4, 33177.0], [92.5, 33514.0], [92.6, 33818.0], [92.7, 34121.0], [92.8, 34455.0], [92.9, 34727.0], [93.0, 35131.0], [93.1, 35618.0], [93.2, 36239.0], [93.3, 36908.0], [93.4, 37716.0], [93.5, 38868.0], [93.6, 40463.0], [93.7, 42099.0], [93.8, 43970.0], [93.9, 49947.0], [94.0, 63455.0], [94.1, 65615.0], [94.2, 66144.0], [94.3, 66674.0], [94.4, 67132.0], [94.5, 67501.0], [94.6, 67910.0], [94.7, 68359.0], [94.8, 68875.0], [94.9, 69557.0], [95.0, 70427.0], [95.1, 71635.0], [95.2, 73889.0], [95.3, 76155.0], [95.4, 95799.0], [95.5, 129222.0], [95.6, 129285.0], [95.7, 129399.0], [95.8, 129497.0], [95.9, 129566.0], [96.0, 129670.0], [96.1, 129738.0], [96.2, 129782.0], [96.3, 129835.0], [96.4, 129921.0], [96.5, 129971.0], [96.6, 130012.0], [96.7, 130039.0], [96.8, 130089.0], [96.9, 130157.0], [97.0, 130238.0], [97.1, 130305.0], [97.2, 130405.0], [97.3, 130503.0], [97.4, 130560.0], [97.5, 130651.0], [97.6, 130729.0], [97.7, 130777.0], [97.8, 130820.0], [97.9, 130889.0], [98.0, 130961.0], [98.1, 131018.0], [98.2, 131052.0], [98.3, 131066.0], [98.4, 131069.0], [98.5, 131070.0], [98.6, 131071.0], [98.7, 131071.0], [98.8, 131072.0], [98.9, 131073.0], [99.0, 131076.0], [99.1, 131119.0], [99.2, 131185.0], [99.3, 132848.0], [99.4, 135169.0], [99.5, 244072.0], [99.6, 370939.0], [99.7, 593864.0], [99.8, 972582.0], [99.9, 982789.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 160998.0, "series": [{"data": [[0.0, 160998.0], [148000.0, 2.0], [868500.0, 1.0], [180000.0, 1.0], [762000.0, 1.0], [612500.0, 2.0], [244000.0, 4.0], [1018000.0, 1.0], [591000.0, 1.0], [975000.0, 9.0], [158500.0, 1.0], [1055000.0, 1.0], [976000.0, 8.0], [254500.0, 8.0], [79500.0, 8.0], [317000.0, 1.0], [3744500.0, 1.0], [381000.0, 5.0], [95500.0, 3.0], [1039500.0, 2.0], [127500.0, 6.0], [509000.0, 2.0], [783500.0, 1.0], [137000.0, 2.0], [316500.0, 1.0], [169000.0, 5.0], [1051000.0, 1.0], [974000.0, 18.0], [696500.0, 1.0], [508500.0, 2.0], [931000.0, 1.0], [34500.0, 544.0], [273500.0, 1.0], [147500.0, 9.0], [42500.0, 63.0], [1038500.0, 1.0], [50500.0, 15.0], [526500.0, 1.0], [58500.0, 10.0], [932000.0, 1.0], [243500.0, 8.0], [69000.0, 257.0], [85000.0, 6.0], [995500.0, 3.0], [101000.0, 4.0], [611500.0, 1.0], [889000.0, 2.0], [117000.0, 1.0], [739500.0, 1.0], [500.0, 3712.0], [1017000.0, 2.0], [158000.0, 4.0], [524500.0, 1.0], [1000.0, 9292.0], [254000.0, 12.0], [865500.0, 1.0], [316000.0, 2.0], [631000.0, 1.0], [993500.0, 7.0], [1500.0, 8884.0], [380000.0, 3.0], [1049000.0, 2.0], [887000.0, 1.0], [1015000.0, 1.0], [737500.0, 4.0], [2000.0, 12831.0], [508000.0, 1.0], [136500.0, 3.0], [2500.0, 12802.0], [632000.0, 1.0], [168500.0, 1.0], [994500.0, 2.0], [3000.0, 12733.0], [379500.0, 7.0], [200500.0, 1.0], [610500.0, 3.0], [3500.0, 10454.0], [888000.0, 1.0], [507500.0, 3.0], [738500.0, 2.0], [4000.0, 10123.0], [1016000.0, 1.0], [74500.0, 93.0], [5000.0, 9070.0], [90500.0, 2.0], [6000.0, 6089.0], [106500.0, 1.0], [7000.0, 3079.0], [122500.0, 3.0], [973000.0, 24.0], [8000.0, 2823.0], [864500.0, 4.0], [10000.0, 2780.0], [992500.0, 10.0], [12000.0, 1457.0], [14000.0, 645.0], [243000.0, 5.0], [1014000.0, 1.0], [736500.0, 2.0], [16000.0, 289.0], [20000.0, 384.0], [24000.0, 113.0], [28000.0, 28.0], [971000.0, 1.0], [486000.0, 1.0], [32000.0, 77.0], [40000.0, 104.0], [157500.0, 2.0], [48000.0, 21.0], [189500.0, 1.0], [56000.0, 17.0], [972000.0, 8.0], [485500.0, 2.0], [253500.0, 2.0], [64000.0, 67.0], [80000.0, 11.0], [379000.0, 3.0], [96000.0, 2.0], [1035500.0, 1.0], [112000.0, 2.0], [443000.0, 1.0], [929000.0, 1.0], [507000.0, 1.0], [128000.0, 8.0], [298500.0, 1.0], [160000.0, 1.0], [192000.0, 1.0], [490500.0, 6.0], [256000.0, 7.0], [639000.0, 1.0], [320000.0, 1.0], [1001500.0, 2.0], [384000.0, 2.0], [617500.0, 2.0], [745500.0, 3.0], [512000.0, 2.0], [138500.0, 6.0], [874500.0, 2.0], [170500.0, 1.0], [1002500.0, 3.0], [383500.0, 1.0], [202500.0, 1.0], [618500.0, 2.0], [511500.0, 1.0], [1024000.0, 3.0], [277000.0, 1.0], [73500.0, 54.0], [89500.0, 3.0], [105500.0, 2.0], [853000.0, 1.0], [981000.0, 9.0], [276500.0, 1.0], [149000.0, 1.0], [872500.0, 1.0], [638000.0, 1.0], [1000500.0, 4.0], [616500.0, 3.0], [213000.0, 1.0], [245000.0, 6.0], [744500.0, 3.0], [851000.0, 2.0], [490000.0, 6.0], [979000.0, 9.0], [39500.0, 102.0], [47500.0, 14.0], [55500.0, 9.0], [980000.0, 10.0], [489500.0, 4.0], [63500.0, 29.0], [255500.0, 3.0], [79000.0, 14.0], [95000.0, 3.0], [383000.0, 3.0], [937000.0, 3.0], [127000.0, 10.0], [511000.0, 1.0], [138000.0, 4.0], [382500.0, 2.0], [850000.0, 1.0], [978000.0, 18.0], [551000.0, 1.0], [679000.0, 1.0], [1041500.0, 5.0], [148500.0, 1.0], [1042500.0, 1.0], [244500.0, 6.0], [68500.0, 320.0], [1104000.0, 1.0], [84500.0, 9.0], [999500.0, 2.0], [100500.0, 4.0], [425000.0, 1.0], [615500.0, 4.0], [116500.0, 1.0], [489000.0, 3.0], [743500.0, 5.0], [1040500.0, 3.0], [223000.0, 1.0], [255000.0, 4.0], [18500.0, 748.0], [22500.0, 130.0], [382000.0, 1.0], [26500.0, 88.0], [30500.0, 30.0], [741500.0, 6.0], [510000.0, 1.0], [137500.0, 9.0], [37000.0, 228.0], [870500.0, 2.0], [317500.0, 3.0], [169500.0, 1.0], [45000.0, 34.0], [998500.0, 3.0], [381500.0, 2.0], [201500.0, 1.0], [53000.0, 16.0], [614500.0, 13.0], [61000.0, 9.0], [509500.0, 1.0], [275000.0, 1.0], [74000.0, 71.0], [90000.0, 5.0], [106000.0, 2.0], [122000.0, 2.0], [977000.0, 27.0], [156000.0, 1.0], [1096500.0, 2.0], [354500.0, 1.0], [644500.0, 1.0], [252000.0, 17.0], [857500.0, 1.0], [312000.0, 1.0], [985500.0, 11.0], [376000.0, 1.0], [504000.0, 1.0], [1007000.0, 4.0], [134500.0, 65.0], [858500.0, 5.0], [311500.0, 3.0], [624000.0, 3.0], [166500.0, 1.0], [375500.0, 4.0], [986500.0, 8.0], [752000.0, 1.0], [230500.0, 1.0], [1008000.0, 1.0], [67500.0, 459.0], [269000.0, 2.0], [83500.0, 5.0], [99500.0, 3.0], [115500.0, 2.0], [461000.0, 1.0], [687500.0, 1.0], [268500.0, 4.0], [145000.0, 4.0], [856500.0, 2.0], [984500.0, 6.0], [750000.0, 2.0], [878000.0, 2.0], [241000.0, 5.0], [1006000.0, 2.0], [36500.0, 280.0], [289500.0, 1.0], [155500.0, 1.0], [44500.0, 38.0], [52500.0, 22.0], [558500.0, 4.0], [219500.0, 1.0], [60500.0, 11.0], [251500.0, 8.0], [73000.0, 59.0], [89000.0, 5.0], [375000.0, 8.0], [1027500.0, 1.0], [105000.0, 2.0], [121000.0, 1.0], [503000.0, 6.0], [134000.0, 80.0], [166000.0, 3.0], [374500.0, 2.0], [438500.0, 1.0], [268000.0, 3.0], [332000.0, 1.0], [1025500.0, 2.0], [641500.0, 1.0], [769500.0, 1.0], [267500.0, 1.0], [144500.0, 3.0], [1026500.0, 1.0], [395500.0, 2.0], [240500.0, 9.0], [1048000.0, 1.0], [621000.0, 2.0], [855500.0, 4.0], [78500.0, 14.0], [983500.0, 7.0], [94500.0, 4.0], [110500.0, 4.0], [126500.0, 4.0], [8500.0, 2898.0], [155000.0, 1.0], [10500.0, 4130.0], [187000.0, 1.0], [1024500.0, 1.0], [12500.0, 1056.0], [416500.0, 1.0], [219000.0, 1.0], [14500.0, 333.0], [251000.0, 5.0], [1046000.0, 1.0], [768500.0, 1.0], [17000.0, 924.0], [1068000.0, 1.0], [853500.0, 2.0], [21000.0, 322.0], [981500.0, 1.0], [374000.0, 13.0], [747000.0, 1.0], [25000.0, 104.0], [597500.0, 1.0], [438000.0, 2.0], [29000.0, 27.0], [1003000.0, 1.0], [34000.0, 515.0], [133500.0, 65.0], [309500.0, 1.0], [42000.0, 212.0], [982500.0, 10.0], [373500.0, 8.0], [748000.0, 1.0], [50000.0, 17.0], [197500.0, 2.0], [437500.0, 1.0], [58000.0, 12.0], [1004000.0, 3.0], [501500.0, 2.0], [68000.0, 343.0], [267000.0, 1.0], [84000.0, 7.0], [331000.0, 1.0], [100000.0, 6.0], [395000.0, 2.0], [961000.0, 1.0], [136000.0, 8.0], [168000.0, 4.0], [378500.0, 3.0], [200000.0, 1.0], [442500.0, 1.0], [970000.0, 2.0], [506500.0, 1.0], [272000.0, 2.0], [799000.0, 1.0], [400000.0, 1.0], [649500.0, 2.0], [271500.0, 1.0], [146500.0, 4.0], [178500.0, 1.0], [399500.0, 2.0], [210500.0, 3.0], [242500.0, 6.0], [77500.0, 19.0], [863500.0, 2.0], [93500.0, 1.0], [991500.0, 6.0], [421000.0, 1.0], [125500.0, 2.0], [735500.0, 4.0], [189000.0, 1.0], [221000.0, 1.0], [484500.0, 1.0], [253000.0, 12.0], [776500.0, 1.0], [989500.0, 4.0], [378000.0, 1.0], [442000.0, 2.0], [4158500.0, 1.0], [733500.0, 5.0], [1011000.0, 6.0], [33500.0, 605.0], [135500.0, 28.0], [862500.0, 2.0], [628000.0, 1.0], [313500.0, 1.0], [41500.0, 84.0], [990500.0, 6.0], [377500.0, 4.0], [49500.0, 25.0], [606500.0, 1.0], [57500.0, 11.0], [734500.0, 3.0], [1012000.0, 1.0], [505500.0, 1.0], [65500.0, 329.0], [67000.0, 447.0], [271000.0, 1.0], [83000.0, 11.0], [335000.0, 1.0], [99000.0, 5.0], [399000.0, 1.0], [1063500.0, 3.0], [969000.0, 3.0], [131000.0, 4107.0], [146000.0, 5.0], [988500.0, 2.0], [398500.0, 1.0], [462500.0, 1.0], [242000.0, 8.0], [1010000.0, 4.0], [732500.0, 2.0], [356000.0, 1.0], [420000.0, 2.0], [156500.0, 2.0], [252500.0, 7.0], [72500.0, 78.0], [88500.0, 1.0], [377000.0, 5.0], [104500.0, 7.0], [925000.0, 1.0], [505000.0, 1.0], [135000.0, 79.0], [816500.0, 1.0], [582000.0, 1.0], [376500.0, 7.0], [504500.0, 1.0], [270000.0, 1.0], [19500.0, 445.0], [901500.0, 1.0], [23500.0, 101.0], [27500.0, 57.0], [31500.0, 121.0], [145500.0, 2.0], [39000.0, 116.0], [47000.0, 25.0], [55000.0, 10.0], [646500.0, 2.0], [461500.0, 1.0], [241500.0, 12.0], [63000.0, 28.0], [774500.0, 1.0], [859500.0, 3.0], [78000.0, 22.0], [355000.0, 1.0], [94000.0, 1.0], [987500.0, 5.0], [110000.0, 1.0], [881000.0, 1.0], [126000.0, 2.0], [1009000.0, 3.0], [731500.0, 1.0], [132000.0, 71.0], [164000.0, 1.0], [370500.0, 9.0], [196000.0, 2.0], [676500.0, 1.0], [954000.0, 1.0], [498500.0, 3.0], [260000.0, 6.0], [264000.0, 1.0], [527000.0, 2.0], [1017500.0, 1.0], [761500.0, 1.0], [263500.0, 1.0], [528000.0, 1.0], [142500.0, 2.0], [1040000.0, 2.0], [1056000.0, 1.0], [71500.0, 106.0], [613000.0, 2.0], [975500.0, 19.0], [87500.0, 2.0], [741000.0, 1.0], [103500.0, 6.0], [869000.0, 1.0], [119500.0, 1.0], [997000.0, 2.0], [284500.0, 3.0], [153000.0, 2.0], [654000.0, 1.0], [249000.0, 6.0], [760500.0, 1.0], [1038000.0, 2.0], [611000.0, 5.0], [306000.0, 2.0], [973500.0, 21.0], [370000.0, 7.0], [739000.0, 1.0], [867000.0, 1.0], [995000.0, 2.0], [498000.0, 2.0], [131500.0, 76.0], [38500.0, 133.0], [612000.0, 7.0], [974500.0, 31.0], [46500.0, 29.0], [369500.0, 9.0], [740000.0, 2.0], [54500.0, 10.0], [433500.0, 2.0], [62500.0, 16.0], [497500.0, 3.0], [259500.0, 3.0], [263000.0, 1.0], [77000.0, 16.0], [93000.0, 1.0], [391000.0, 1.0], [547500.0, 1.0], [109000.0, 2.0], [953000.0, 1.0], [125000.0, 1.0], [519000.0, 1.0], [262500.0, 5.0], [142000.0, 2.0], [610000.0, 2.0], [972500.0, 15.0], [174000.0, 1.0], [738000.0, 4.0], [866000.0, 1.0], [716500.0, 1.0], [994000.0, 4.0], [518500.0, 1.0], [284000.0, 1.0], [348000.0, 2.0], [1050000.0, 1.0], [283500.0, 1.0], [347500.0, 1.0], [248500.0, 14.0], [66500.0, 389.0], [4500.0, 8097.0], [887500.0, 1.0], [82500.0, 7.0], [5500.0, 7456.0], [369000.0, 7.0], [98500.0, 5.0], [6500.0, 4625.0], [114500.0, 2.0], [7500.0, 2335.0], [130500.0, 2700.0], [759500.0, 1.0], [9000.0, 3571.0], [163000.0, 3.0], [11000.0, 1895.0], [368500.0, 6.0], [195000.0, 2.0], [544500.0, 1.0], [13000.0, 811.0], [15000.0, 310.0], [496500.0, 3.0], [259000.0, 6.0], [18000.0, 954.0], [22000.0, 191.0], [1013500.0, 4.0], [390000.0, 1.0], [26000.0, 234.0], [30000.0, 31.0], [518000.0, 2.0], [36000.0, 233.0], [141500.0, 2.0], [325500.0, 1.0], [1068500.0, 1.0], [44000.0, 53.0], [173500.0, 1.0], [389500.0, 2.0], [52000.0, 9.0], [630500.0, 1.0], [60000.0, 6.0], [517500.0, 1.0], [72000.0, 95.0], [283000.0, 1.0], [609000.0, 1.0], [88000.0, 3.0], [737000.0, 3.0], [104000.0, 1.0], [865000.0, 1.0], [993000.0, 9.0], [266500.0, 1.0], [618000.0, 3.0], [852500.0, 7.0], [980500.0, 16.0], [746000.0, 2.0], [394500.0, 2.0], [240000.0, 4.0], [1002000.0, 2.0], [154500.0, 1.0], [250500.0, 5.0], [533000.0, 1.0], [309000.0, 1.0], [81500.0, 9.0], [373000.0, 9.0], [97500.0, 2.0], [437000.0, 4.0], [113500.0, 2.0], [501000.0, 4.0], [129500.0, 2645.0], [767500.0, 2.0], [133000.0, 94.0], [308500.0, 1.0], [372500.0, 6.0], [500500.0, 5.0], [261000.0, 4.0], [531000.0, 3.0], [266000.0, 2.0], [1021500.0, 1.0], [1043000.0, 1.0], [522000.0, 1.0], [265500.0, 1.0], [532000.0, 1.0], [35500.0, 300.0], [143500.0, 3.0], [43500.0, 56.0], [1022500.0, 2.0], [51500.0, 12.0], [59500.0, 11.0], [239500.0, 6.0], [766500.0, 2.0], [1044000.0, 1.0], [71000.0, 145.0], [287000.0, 2.0], [851500.0, 2.0], [617000.0, 2.0], [87000.0, 6.0], [979500.0, 18.0], [103000.0, 3.0], [119000.0, 2.0], [1001000.0, 1.0], [286500.0, 1.0], [154000.0, 2.0], [186000.0, 1.0], [250000.0, 10.0], [1042000.0, 7.0], [615000.0, 8.0], [977500.0, 32.0], [372000.0, 7.0], [743000.0, 1.0], [593500.0, 1.0], [871000.0, 2.0], [436000.0, 1.0], [999000.0, 5.0], [500000.0, 2.0], [132500.0, 73.0], [616000.0, 5.0], [307500.0, 2.0], [978500.0, 29.0], [371500.0, 7.0], [744000.0, 2.0], [196500.0, 3.0], [1000000.0, 5.0], [499500.0, 2.0], [260500.0, 3.0], [265000.0, 2.0], [76500.0, 29.0], [92500.0, 5.0], [108500.0, 1.0], [124500.0, 1.0], [264500.0, 6.0], [143000.0, 2.0], [614000.0, 7.0], [3721500.0, 1.0], [976500.0, 31.0], [742000.0, 2.0], [239000.0, 1.0], [720500.0, 1.0], [998000.0, 1.0], [16500.0, 684.0], [286000.0, 3.0], [20500.0, 344.0], [350000.0, 1.0], [24500.0, 102.0], [28500.0, 37.0], [955000.0, 1.0], [32500.0, 345.0], [33000.0, 396.0], [285500.0, 1.0], [153500.0, 2.0], [41000.0, 93.0], [934500.0, 1.0], [349500.0, 1.0], [49000.0, 18.0], [57000.0, 13.0], [249500.0, 14.0], [65000.0, 118.0], [66000.0, 280.0], [529000.0, 1.0], [307000.0, 1.0], [82000.0, 14.0], [371000.0, 1.0], [98000.0, 2.0], [1019500.0, 4.0], [499000.0, 1.0], [130000.0, 2562.0], [1041000.0, 6.0], [172000.0, 4.0], [386500.0, 1.0], [858000.0, 7.0], [986000.0, 11.0], [280000.0, 1.0], [943000.0, 2.0], [279500.0, 1.0], [182500.0, 1.0], [666500.0, 1.0], [246500.0, 1.0], [75500.0, 74.0], [879500.0, 1.0], [301000.0, 1.0], [91500.0, 3.0], [1007500.0, 2.0], [429000.0, 1.0], [623500.0, 2.0], [123500.0, 1.0], [1029000.0, 1.0], [558000.0, 2.0], [161000.0, 2.0], [686000.0, 1.0], [193000.0, 3.0], [428500.0, 1.0], [225000.0, 1.0], [942000.0, 1.0], [664500.0, 1.0], [492500.0, 6.0], [257000.0, 1.0], [322000.0, 1.0], [1005500.0, 1.0], [621500.0, 1.0], [514000.0, 1.0], [139500.0, 4.0], [40500.0, 123.0], [171500.0, 1.0], [1006500.0, 1.0], [48500.0, 18.0], [385500.0, 1.0], [622500.0, 1.0], [56500.0, 7.0], [235500.0, 1.0], [750500.0, 1.0], [64500.0, 82.0], [279000.0, 1.0], [81000.0, 6.0], [97000.0, 4.0], [857000.0, 1.0], [113000.0, 2.0], [985000.0, 20.0], [129000.0, 1259.0], [278500.0, 1.0], [182000.0, 1.0], [620500.0, 2.0], [246000.0, 2.0], [855000.0, 3.0], [983000.0, 15.0], [492000.0, 3.0], [160500.0, 2.0], [728000.0, 1.0], [192500.0, 1.0], [856000.0, 4.0], [491500.0, 10.0], [984000.0, 11.0], [256500.0, 2.0], [70500.0, 153.0], [1050500.0, 3.0], [86500.0, 5.0], [385000.0, 3.0], [1047500.0, 1.0], [102500.0, 4.0], [118500.0, 1.0], [513000.0, 1.0], [139000.0, 5.0], [9500.0, 3176.0], [960500.0, 1.0], [11500.0, 3012.0], [384500.0, 1.0], [1067000.0, 1.0], [13500.0, 1616.0], [854000.0, 5.0], [982000.0, 2.0], [15500.0, 276.0], [278000.0, 2.0], [19000.0, 656.0], [917500.0, 1.0], [342000.0, 2.0], [23000.0, 88.0], [1045500.0, 1.0], [27000.0, 46.0], [470000.0, 1.0], [31000.0, 24.0], [790500.0, 1.0], [277500.0, 2.0], [38000.0, 142.0], [149500.0, 2.0], [46000.0, 31.0], [405500.0, 1.0], [54000.0, 15.0], [213500.0, 1.0], [245500.0, 3.0], [62000.0, 12.0], [76000.0, 89.0], [92000.0, 1.0], [1003500.0, 2.0], [108000.0, 1.0], [427000.0, 1.0], [897000.0, 1.0], [491000.0, 5.0], [124000.0, 5.0], [628500.0, 1.0], [906000.0, 1.0], [248000.0, 8.0], [1034000.0, 1.0], [969500.0, 4.0], [735000.0, 4.0], [863000.0, 2.0], [496000.0, 4.0], [991000.0, 8.0], [970500.0, 1.0], [736000.0, 5.0], [367500.0, 1.0], [194500.0, 1.0], [864000.0, 1.0], [992000.0, 9.0], [495500.0, 6.0], [258500.0, 5.0], [69500.0, 233.0], [85500.0, 7.0], [927500.0, 1.0], [389000.0, 2.0], [101500.0, 2.0], [543500.0, 1.0], [141000.0, 4.0], [968500.0, 2.0], [173000.0, 1.0], [734000.0, 2.0], [388500.0, 1.0], [205000.0, 1.0], [862000.0, 1.0], [237000.0, 1.0], [990000.0, 2.0], [282000.0, 1.0], [410000.0, 2.0], [37500.0, 183.0], [151500.0, 1.0], [45500.0, 42.0], [409500.0, 1.0], [53500.0, 11.0], [215500.0, 1.0], [670500.0, 1.0], [61500.0, 9.0], [247500.0, 4.0], [75000.0, 78.0], [91000.0, 2.0], [107000.0, 2.0], [495000.0, 7.0], [123000.0, 2.0], [162000.0, 1.0], [924500.0, 1.0], [366500.0, 2.0], [194000.0, 1.0], [494500.0, 3.0], [258000.0, 6.0], [881500.0, 1.0], [1009500.0, 3.0], [388000.0, 3.0], [753500.0, 1.0], [516000.0, 1.0], [1031000.0, 1.0], [140500.0, 5.0], [1010500.0, 4.0], [387500.0, 1.0], [204500.0, 1.0], [80500.0, 7.0], [733000.0, 1.0], [96500.0, 3.0], [989000.0, 8.0], [128500.0, 9.0], [151000.0, 1.0], [880500.0, 1.0], [1056500.0, 2.0], [1008500.0, 1.0], [215000.0, 1.0], [624500.0, 3.0], [247000.0, 2.0], [752500.0, 1.0], [17500.0, 1301.0], [21500.0, 236.0], [731000.0, 2.0], [25500.0, 173.0], [430000.0, 1.0], [29500.0, 30.0], [494000.0, 8.0], [987000.0, 6.0], [35000.0, 392.0], [301500.0, 1.0], [43000.0, 70.0], [732000.0, 5.0], [365500.0, 3.0], [193500.0, 3.0], [51000.0, 15.0], [860000.0, 4.0], [59000.0, 17.0], [493500.0, 5.0], [988000.0, 3.0], [257500.0, 1.0], [795500.0, 1.0], [70000.0, 159.0], [561000.0, 1.0], [86000.0, 5.0], [387000.0, 2.0], [539500.0, 2.0], [102000.0, 5.0], [451000.0, 2.0], [118000.0, 1.0], [515000.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 4158500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 12906.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 165693.0, "series": [{"data": [[1.0, 12906.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 165693.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 19888.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 150982.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.50807054E12, "maxY": 1000.0, "series": [{"data": [[1.50807126E12, 1000.0], [1.50807348E12, 1000.0], [1.50807186E12, 1000.0], [1.50807408E12, 1000.0], [1.5080751E12, 1000.0], [1.50807228E12, 1000.0], [1.5080739E12, 1000.0], [1.5080745E12, 1000.0], [1.50807066E12, 300.86729277256046], [1.50807288E12, 1000.0], [1.50807204E12, 1000.0], [1.50807366E12, 1000.0], [1.50807426E12, 1000.0], [1.50807264E12, 1000.0], [1.50807084E12, 800.9081672528312], [1.50807528E12, 1000.0], [1.50807246E12, 1000.0], [1.50807144E12, 1000.0], [1.50807306E12, 1000.0], [1.50807468E12, 1000.0], [1.5080706E12, 129.72411554690018], [1.50807504E12, 1000.0], [1.50807222E12, 1000.0], [1.50807444E12, 1000.0], [1.5080712E12, 1000.0], [1.50807282E12, 1000.0], [1.50807102E12, 1000.0], [1.50807324E12, 1000.0], [1.50807546E12, 52.1237113402062], [1.50807162E12, 1000.0], [1.50807384E12, 1000.0], [1.50807486E12, 1000.0], [1.50807078E12, 636.1625655506263], [1.508073E12, 1000.0], [1.50807522E12, 1000.0], [1.5080736E12, 1000.0], [1.50807138E12, 1000.0], [1.50807462E12, 1000.0], [1.5080718E12, 1000.0], [1.50807342E12, 1000.0], [1.5080724E12, 1000.0], [1.50807402E12, 1000.0], [1.50807156E12, 1000.0], [1.50807318E12, 1000.0], [1.50807216E12, 1000.0], [1.50807378E12, 1000.0], [1.5080754E12, 296.0923076923081], [1.5080748E12, 1000.0], [1.50807198E12, 1000.0], [1.5080742E12, 1000.0], [1.50807096E12, 1000.0], [1.50807258E12, 1000.0], [1.50807174E12, 1000.0], [1.50807396E12, 1000.0], [1.50807072E12, 468.11432108955813], [1.50807234E12, 1000.0], [1.50807456E12, 1000.0], [1.50807558E12, 3.0], [1.50807438E12, 1000.0], [1.50807054E12, 28.85272360457295], [1.50807276E12, 1000.0], [1.50807498E12, 1000.0], [1.50807114E12, 1000.0], [1.50807336E12, 1000.0], [1.50807414E12, 1000.0], [1.50807252E12, 1000.0], [1.50807474E12, 1000.0], [1.5080709E12, 960.2088557993715], [1.50807312E12, 1000.0], [1.50807132E12, 1000.0], [1.50807294E12, 1000.0], [1.50807192E12, 1000.0], [1.50807354E12, 1000.0], [1.50807516E12, 1000.0], [1.50807108E12, 1000.0], [1.5080727E12, 1000.0], [1.50807168E12, 1000.0], [1.5080733E12, 1000.0], [1.50807492E12, 1000.0], [1.5080715E12, 1000.0], [1.50807372E12, 1000.0], [1.5080721E12, 1000.0], [1.50807432E12, 1000.0], [1.50807534E12, 946.3378825475604]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.50807558E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 99.84210526315789, "minX": 3.0, "maxY": 2325384.6, "series": [{"data": [[3.0, 2325384.6], [4.0, 341.25], [5.0, 308.3333333333333], [6.0, 49161.0], [7.0, 45398.81818181818], [8.0, 19944.12], [9.0, 56410.22222222222], [10.0, 12090.709677419354], [11.0, 128.3529411764706], [12.0, 25173.727272727272], [13.0, 103.80555555555557], [14.0, 99.84210526315789], [15.0, 10438.657894736842], [16.0, 11948.135135135133], [17.0, 16708.945945945947], [18.0, 100.05555555555557], [19.0, 7544.028571428571], [20.0, 18701.025], [21.0, 12945.205128205129], [22.0, 14833.94117647059], [23.0, 9897.615384615385], [24.0, 15541.5625], [25.0, 11817.92857142857], [26.0, 18153.88235294118], [27.0, 12671.666666666666], [28.0, 11452.969696969696], [29.0, 20285.394736842103], [30.0, 9691.74358974359], [31.0, 10467.861111111111], [32.0, 8923.314285714285], [33.0, 8020.564102564103], [34.0, 10078.270270270272], [35.0, 105.41935483870968], [36.0, 51464.07894736842], [37.0, 9444.757575757576], [38.0, 15551.65625], [39.0, 17323.916666666664], [40.0, 16403.763157894737], [41.0, 13486.379310344826], [42.0, 16018.06451612903], [43.0, 15315.030303030304], [44.0, 13200.4375], [45.0, 26746.321428571428], [46.0, 17402.868421052633], [47.0, 22403.39285714286], [48.0, 26171.791666666664], [49.0, 19753.5], [50.0, 12426.935483870968], [51.0, 12597.645161290322], [52.0, 24191.77419354839], [53.0, 26830.757575757576], [54.0, 36080.625], [55.0, 29081.566666666666], [56.0, 20557.709677419352], [57.0, 15051.0], [58.0, 12001.60606060606], [59.0, 773.8275862068966], [60.0, 85335.5652173913], [61.0, 20960.541666666664], [62.0, 18624.60714285714], [63.0, 16834.548387096776], [64.0, 23382.14814814815], [65.0, 28447.81818181818], [66.0, 61746.666666666664], [67.0, 44153.41176470588], [68.0, 42150.09523809524], [69.0, 1108.7777777777778], [70.0, 101604.75], [71.0, 24291.04761904762], [72.0, 51313.705882352944], [73.0, 40204.21052631579], [74.0, 62776.9375], [75.0, 39476.625], [76.0, 20797.736842105263], [77.0, 19127.95238095238], [78.0, 18285.666666666668], [79.0, 62126.5], [80.0, 11868.04], [81.0, 28714.166666666664], [82.0, 44958.05882352941], [83.0, 12352.545454545454], [84.0, 28720.722222222226], [85.0, 26057.75], [86.0, 26587.241379310344], [87.0, 13529.608695652176], [88.0, 19682.25925925926], [89.0, 33808.63157894737], [90.0, 27704.315789473687], [91.0, 27414.315789473687], [92.0, 24702.809523809523], [93.0, 35869.08], [94.0, 37533.64705882353], [95.0, 15048.5], [96.0, 1098.952380952381], [97.0, 80619.44], [98.0, 23189.681818181816], [99.0, 31752.823529411766], [100.0, 38276.05882352941], [101.0, 32255.083333333336], [102.0, 15526.166666666666], [103.0, 17747.86666666667], [104.0, 23925.5], [105.0, 27537.785714285714], [106.0, 38571.94117647059], [107.0, 14444.142857142857], [108.0, 21247.0], [109.0, 35599.18181818182], [110.0, 18998.136363636364], [111.0, 9427.052631578947], [112.0, 11803.133333333335], [113.0, 46189.6], [114.0, 27410.0], [115.0, 33958.15789473685], [116.0, 28632.434782608696], [117.0, 8762.666666666666], [118.0, 52361.08333333333], [119.0, 10177.111111111111], [120.0, 8812.65], [121.0, 26446.4], [122.0, 39180.782608695656], [123.0, 14581.4], [124.0, 10209.29411764706], [125.0, 2515.5], [126.0, 1453.3157894736842], [127.0, 10231.4375], [128.0, 18985.304347826088], [129.0, 11683.066666666666], [130.0, 45909.41176470588], [131.0, 9970.5], [132.0, 8394.650000000001], [133.0, 1942.047619047619], [134.0, 2220.4117647058824], [135.0, 2113.5000000000005], [136.0, 13298.434782608696], [137.0, 20611.428571428572], [138.0, 2577.4375], [139.0, 84648.22222222222], [140.0, 10341.31818181818], [141.0, 10285.3125], [142.0, 2219.4615384615386], [143.0, 9106.25], [144.0, 2654.8125], [145.0, 22929.105263157893], [146.0, 1906.0], [147.0, 3892.571428571429], [148.0, 11049.3125], [149.0, 73820.33333333334], [150.0, 10701.75], [151.0, 2997.3571428571427], [152.0, 2882.0000000000005], [153.0, 15766.51724137931], [154.0, 28486.894736842107], [155.0, 42672.5], [156.0, 55649.75], [157.0, 59333.0], [158.0, 1583.6000000000001], [159.0, 8604.954545454544], [160.0, 2985.7499999999995], [161.0, 10744.5], [162.0, 11608.666666666666], [163.0, 10938.058823529413], [164.0, 24685.88888888889], [165.0, 37410.96], [166.0, 12900.642857142857], [167.0, 9137.260869565218], [168.0, 3508.0], [169.0, 64845.50000000001], [170.0, 3228.0], [171.0, 20099.533333333333], [172.0, 6612.0625], [173.0, 28009.909090909092], [174.0, 2778.6666666666665], [175.0, 3493.8823529411766], [176.0, 4855.4], [177.0, 14352.545454545456], [178.0, 3227.4705882352937], [179.0, 27282.0625], [180.0, 19467.583333333332], [181.0, 30435.222222222223], [182.0, 28332.1], [183.0, 16044.125], [184.0, 3854.2666666666664], [185.0, 16150.449999999999], [186.0, 13144.479999999998], [187.0, 14471.954545454544], [188.0, 18927.8125], [189.0, 25657.272727272724], [190.0, 2843.5625], [191.0, 28270.05], [192.0, 32885.529411764706], [193.0, 22759.52380952381], [194.0, 13339.625], [195.0, 3188.818181818182], [196.0, 16017.045454545456], [197.0, 2769.8823529411766], [198.0, 15374.142857142855], [199.0, 3526.2666666666664], [200.0, 16396.75], [201.0, 11754.857142857143], [202.0, 8196.0], [203.0, 11757.470588235294], [204.0, 5901.846153846154], [205.0, 11611.444444444445], [206.0, 2826.266666666667], [207.0, 20314.454545454544], [208.0, 52807.35294117647], [209.0, 23226.894736842103], [210.0, 2590.9411764705883], [211.0, 82046.35714285713], [212.0, 12495.933333333334], [213.0, 1959.3529411764703], [214.0, 3627.684210526316], [215.0, 3093.6428571428573], [216.0, 15561.904761904761], [217.0, 3690.0], [218.0, 26678.09523809524], [219.0, 16409.722222222223], [220.0, 18880.75], [221.0, 45372.25], [222.0, 36760.46666666667], [223.0, 9533.65], [224.0, 11193.105263157893], [225.0, 3662.0000000000005], [226.0, 9943.636363636364], [227.0, 10813.5], [228.0, 2093.2], [229.0, 8642.92], [230.0, 16910.55], [231.0, 20540.933333333334], [232.0, 7799.777777777779], [233.0, 7212.266666666666], [234.0, 7923.076923076924], [235.0, 10441.818181818184], [236.0, 9033.454545454546], [237.0, 4566.571428571429], [238.0, 2865.266666666667], [239.0, 4370.7], [240.0, 9363.347826086956], [241.0, 12536.25], [242.0, 10489.411764705881], [243.0, 4794.777777777777], [244.0, 17922.75], [245.0, 12545.3], [246.0, 13028.277777777777], [247.0, 6963.714285714285], [248.0, 29166.133333333335], [249.0, 24162.192307692305], [250.0, 46756.08333333333], [251.0, 15206.0], [252.0, 10293.809523809525], [253.0, 11878.5], [254.0, 3751.5000000000005], [255.0, 3706.5], [257.0, 13304.615384615383], [256.0, 3989.5333333333333], [258.0, 37793.46666666667], [259.0, 7279.64705882353], [260.0, 5719.8], [261.0, 6621.75], [262.0, 14442.736842105263], [263.0, 10373.454545454546], [264.0, 8630.07142857143], [270.0, 20504.733333333334], [271.0, 58837.2], [268.0, 8998.625], [269.0, 11465.071428571428], [265.0, 10422.538461538461], [266.0, 11856.285714285717], [267.0, 11026.076923076922], [273.0, 3415.6000000000004], [272.0, 13834.555555555555], [274.0, 22149.384615384617], [275.0, 10820.76923076923], [276.0, 8195.75], [277.0, 9584.454545454546], [278.0, 12347.0], [279.0, 10168.1875], [280.0, 10813.181818181818], [286.0, 48932.15789473684], [287.0, 44856.13333333334], [284.0, 13782.454545454544], [285.0, 21086.625], [281.0, 9729.083333333334], [282.0, 9579.894736842105], [283.0, 7502.0625], [289.0, 38965.16666666667], [288.0, 32903.42857142857], [290.0, 18152.5], [291.0, 31017.833333333336], [292.0, 18714.4], [293.0, 8989.142857142857], [294.0, 23292.066666666666], [295.0, 14075.352941176468], [296.0, 3790.0], [302.0, 60858.73333333333], [303.0, 10377.133333333333], [300.0, 28336.29411764706], [301.0, 26906.6], [297.0, 33450.600000000006], [298.0, 8857.6875], [299.0, 35299.05], [305.0, 5981.117647058823], [304.0, 6931.894736842105], [306.0, 68996.05882352941], [307.0, 6253.333333333333], [308.0, 4149.538461538462], [309.0, 72440.4375], [310.0, 12886.9375], [311.0, 27005.9375], [312.0, 7317.166666666667], [318.0, 27246.999999999996], [319.0, 15391.285714285716], [316.0, 8529.681818181818], [317.0, 20223.142857142855], [313.0, 9032.0], [314.0, 6178.64705882353], [315.0, 9081.133333333331], [321.0, 13596.045454545454], [320.0, 10685.529411764706], [322.0, 4221.176470588235], [323.0, 16048.727272727276], [324.0, 5166.631578947369], [325.0, 29439.18181818182], [326.0, 5806.105263157895], [327.0, 5693.611111111111], [328.0, 12704.444444444443], [334.0, 9539.578947368422], [335.0, 12359.571428571428], [332.0, 27853.117647058825], [333.0, 10492.714285714286], [329.0, 4368.272727272727], [330.0, 3789.8235294117653], [331.0, 35804.75], [337.0, 10300.333333333332], [336.0, 7985.235294117646], [338.0, 7671.25], [339.0, 7737.611111111112], [340.0, 9466.608695652172], [341.0, 9448.923076923078], [342.0, 88632.88888888889], [343.0, 23931.736842105263], [344.0, 8645.1875], [350.0, 16573.5], [351.0, 19932.315789473687], [348.0, 6357.142857142857], [349.0, 20140.666666666668], [345.0, 78865.3], [346.0, 6553.6], [347.0, 6249.214285714286], [353.0, 4979.5], [352.0, 22256.0], [354.0, 34194.0], [355.0, 4813.181818181818], [356.0, 16181.0], [357.0, 4916.533333333334], [358.0, 21024.4375], [359.0, 18277.954545454544], [360.0, 6677.5625], [366.0, 7960.857142857143], [367.0, 16053.956521739134], [364.0, 10092.083333333334], [365.0, 10422.0625], [361.0, 24856.076923076922], [362.0, 6293.857142857144], [363.0, 18966.052631578947], [369.0, 20279.5], [368.0, 13399.9375], [370.0, 15117.199999999999], [371.0, 6883.947368421053], [372.0, 9108.266666666666], [373.0, 21397.75], [374.0, 61913.92307692308], [375.0, 11182.625], [376.0, 76674.05882352941], [382.0, 4467.357142857143], [383.0, 19224.42105263158], [380.0, 14375.0], [381.0, 6297.055555555557], [377.0, 39234.25], [378.0, 27803.142857142855], [379.0, 15442.0], [385.0, 6692.357142857143], [384.0, 4687.588235294118], [386.0, 6215.533333333333], [387.0, 13815.625], [388.0, 27892.15789473684], [389.0, 4307.857142857144], [390.0, 11896.399999999998], [391.0, 16526.181818181816], [392.0, 20802.3125], [398.0, 14286.187499999998], [399.0, 12453.636363636364], [396.0, 7753.533333333333], [397.0, 8619.538461538463], [393.0, 24034.473684210527], [394.0, 7231.347826086958], [395.0, 8021.312499999999], [401.0, 7288.666666666667], [400.0, 8267.533333333333], [402.0, 16155.652173913044], [403.0, 18899.88888888889], [404.0, 67656.25], [405.0, 39993.5], [406.0, 19098.1875], [407.0, 37043.470588235294], [408.0, 14722.153846153848], [414.0, 23667.0], [415.0, 7138.8], [412.0, 11896.526315789473], [413.0, 7450.117647058823], [409.0, 11324.466666666667], [410.0, 18108.75], [411.0, 11219.266666666666], [417.0, 13510.466666666667], [416.0, 36683.333333333336], [418.0, 3328.9375], [419.0, 16451.04], [420.0, 12440.384615384617], [421.0, 9576.92857142857], [422.0, 9573.0], [423.0, 12627.76923076923], [424.0, 7072.333333333333], [430.0, 14533.888888888889], [431.0, 9932.866666666669], [428.0, 9061.727272727272], [429.0, 20013.000000000004], [425.0, 9154.357142857143], [426.0, 9757.916666666668], [427.0, 8663.666666666666], [433.0, 6678.461538461539], [432.0, 12372.399999999998], [434.0, 12012.615384615383], [435.0, 8185.785714285715], [436.0, 10845.6875], [437.0, 14575.727272727272], [438.0, 12951.470588235292], [439.0, 11174.099999999999], [440.0, 11698.9375], [446.0, 76027.84615384616], [447.0, 9988.375], [444.0, 39225.529411764706], [445.0, 5002.7619047619055], [441.0, 11768.384615384613], [442.0, 8803.538461538461], [443.0, 11416.578947368424], [449.0, 8102.266666666666], [448.0, 39295.38461538462], [450.0, 13768.687500000002], [451.0, 10165.23076923077], [452.0, 72244.0625], [453.0, 5325.062499999999], [454.0, 132155.0], [455.0, 17282.529411764706], [456.0, 5499.375], [462.0, 7505.624999999998], [463.0, 6176.117647058823], [460.0, 4062.4615384615386], [461.0, 5685.136363636365], [457.0, 37800.375], [458.0, 9866.307692307691], [459.0, 5982.526315789473], [465.0, 8081.470588235294], [464.0, 9765.933333333334], [466.0, 7607.666666666666], [467.0, 13304.6], [468.0, 9101.354838709674], [469.0, 8596.333333333334], [470.0, 9343.083333333332], [471.0, 8663.142857142859], [472.0, 11148.437499999998], [478.0, 7519.555555555555], [479.0, 17010.5], [476.0, 10750.142857142855], [477.0, 6803.799999999999], [473.0, 8859.210526315788], [474.0, 10617.533333333335], [475.0, 9414.0], [481.0, 45592.533333333326], [480.0, 9977.954545454546], [482.0, 20164.8125], [483.0, 13702.0], [484.0, 4653.64705882353], [485.0, 4956.8], [486.0, 69199.4375], [487.0, 4404.533333333333], [488.0, 6949.235294117647], [494.0, 16285.499999999998], [495.0, 6603.333333333334], [492.0, 9951.909090909092], [493.0, 10671.75], [489.0, 7063.263157894737], [490.0, 7351.800000000001], [491.0, 7278.7333333333345], [497.0, 12666.692307692309], [496.0, 6000.2], [498.0, 11508.8], [499.0, 7251.75], [500.0, 6590.526315789473], [501.0, 9964.866666666667], [502.0, 9571.631578947368], [503.0, 10048.75], [504.0, 31385.842105263157], [510.0, 31202.545454545456], [511.0, 14368.0], [508.0, 56159.571428571435], [509.0, 30468.199999999997], [505.0, 34801.1], [506.0, 32680.083333333336], [507.0, 29310.307692307695], [515.0, 10215.944444444443], [512.0, 17766.25], [526.0, 10041.2], [527.0, 14158.625], [524.0, 10591.23076923077], [525.0, 19583.333333333332], [522.0, 12665.56], [523.0, 17674.14285714286], [513.0, 19720.400000000005], [514.0, 12358.333333333332], [516.0, 14619.272727272728], [517.0, 7376.888888888889], [518.0, 11769.466666666665], [519.0, 5836.75], [528.0, 9527.090909090908], [542.0, 6313.785714285715], [543.0, 84658.375], [540.0, 77524.13333333333], [541.0, 10989.277777777777], [538.0, 8697.461538461539], [539.0, 13921.399999999998], [536.0, 22206.25], [537.0, 8810.388888888889], [529.0, 7639.666666666666], [530.0, 9085.583333333334], [531.0, 14949.555555555557], [532.0, 13521.25], [533.0, 14397.199999999999], [534.0, 6343.071428571429], [535.0, 8643.92857142857], [520.0, 12319.0], [521.0, 12255.800000000001], [547.0, 25916.199999999997], [544.0, 28827.625], [558.0, 10562.21052631579], [559.0, 7758.222222222223], [556.0, 5315.714285714286], [557.0, 8642.6875], [554.0, 13912.214285714286], [555.0, 5879.571428571428], [545.0, 9337.631578947368], [546.0, 8049.666666666667], [548.0, 14236.789473684212], [549.0, 9031.142857142857], [550.0, 6058.666666666667], [551.0, 10402.571428571428], [560.0, 7617.217391304347], [574.0, 9789.823529411764], [575.0, 5261.785714285714], [572.0, 8952.0], [573.0, 5748.761904761906], [570.0, 5789.176470588236], [571.0, 11876.916666666666], [568.0, 4386.071428571428], [569.0, 11050.0], [561.0, 6615.6], [562.0, 10006.399999999998], [563.0, 13320.0], [564.0, 14380.999999999998], [565.0, 6040.15], [566.0, 6498.0625], [567.0, 6447.315789473684], [552.0, 6517.833333333334], [553.0, 27024.04347826087], [579.0, 6162.454545454546], [576.0, 27900.444444444438], [590.0, 7741.928571428572], [591.0, 6569.133333333333], [588.0, 6906.117647058824], [589.0, 9131.09090909091], [586.0, 8781.888888888889], [587.0, 15106.499999999996], [577.0, 8844.823529411764], [578.0, 8714.5], [580.0, 9755.785714285714], [581.0, 22686.722222222223], [582.0, 13740.529411764706], [583.0, 13172.833333333332], [592.0, 9454.272727272728], [606.0, 20286.818181818184], [607.0, 4731.272727272727], [604.0, 80861.61538461538], [605.0, 14966.333333333332], [602.0, 19683.0], [603.0, 39267.38888888889], [600.0, 13961.416666666664], [601.0, 7681.25], [593.0, 22560.941176470587], [594.0, 17979.375], [595.0, 16398.375], [596.0, 17618.8125], [597.0, 10135.642857142859], [598.0, 38423.64705882353], [599.0, 14456.916666666666], [584.0, 11122.642857142857], [585.0, 7696.0], [611.0, 6238.454545454545], [608.0, 6658.083333333333], [622.0, 7648.5714285714275], [623.0, 5165.923076923077], [620.0, 7736.785714285714], [621.0, 21133.851851851854], [618.0, 10099.25], [619.0, 6457.333333333334], [609.0, 14731.76923076923], [610.0, 74208.47368421052], [612.0, 3652.6428571428573], [613.0, 6717.115384615387], [614.0, 5307.062499999999], [615.0, 20649.61538461538], [624.0, 10586.199999999999], [638.0, 67448.05263157895], [639.0, 6229.499999999999], [636.0, 8037.999999999999], [637.0, 6656.999999999999], [634.0, 14432.0], [635.0, 14275.454545454546], [632.0, 8621.1875], [633.0, 48032.545454545456], [625.0, 6143.0625], [626.0, 6010.421052631578], [627.0, 14169.869565217392], [628.0, 9243.846153846154], [629.0, 11420.533333333333], [630.0, 12474.5], [631.0, 8986.692307692309], [616.0, 10085.142857142857], [617.0, 10452.631578947367], [643.0, 9324.388888888889], [640.0, 7362.25], [654.0, 7156.588235294118], [655.0, 13042.312500000002], [652.0, 9836.461538461539], [653.0, 12697.625], [650.0, 32110.210526315797], [651.0, 5502.266666666667], [641.0, 7652.476190476189], [642.0, 9186.222222222223], [644.0, 18728.777777777777], [645.0, 12194.11111111111], [646.0, 12362.562500000002], [647.0, 7427.388888888889], [656.0, 21418.312499999996], [670.0, 61815.799999999996], [671.0, 60522.75000000001], [668.0, 50333.19047619047], [669.0, 46270.142857142855], [666.0, 42584.0], [667.0, 53205.666666666664], [664.0, 6023.470588235294], [665.0, 53313.6], [657.0, 6595.78947368421], [658.0, 10275.625000000004], [659.0, 5625.444444444444], [660.0, 4924.692307692308], [661.0, 5695.125000000002], [662.0, 14562.636363636362], [663.0, 14915.142857142859], [648.0, 10904.199999999999], [649.0, 9278.0], [675.0, 13510.625], [672.0, 18108.473684210527], [686.0, 11722.875], [687.0, 8369.588235294117], [684.0, 22774.875000000004], [685.0, 9314.041666666666], [682.0, 7859.0], [683.0, 10149.42857142857], [673.0, 8903.75], [674.0, 11897.9375], [676.0, 4562.466666666667], [677.0, 4457.714285714285], [678.0, 85506.64705882352], [679.0, 67208.14285714286], [688.0, 7177.166666666666], [702.0, 16551.07142857143], [703.0, 10696.083333333332], [700.0, 5015.8], [701.0, 27801.176470588227], [698.0, 7916.294117647059], [699.0, 7741.791666666667], [696.0, 5707.631578947369], [697.0, 6719.294117647059], [689.0, 7996.250000000002], [690.0, 11272.5], [691.0, 5558.25], [692.0, 6221.733333333334], [693.0, 11774.05882352941], [694.0, 5321.0], [695.0, 25612.86666666667], [680.0, 9292.5], [681.0, 9635.222222222223], [707.0, 8655.6875], [704.0, 10830.363636363638], [718.0, 26714.04347826087], [719.0, 9790.842105263155], [716.0, 4828.9375], [717.0, 8697.333333333334], [714.0, 6862.227272727272], [715.0, 8361.315789473685], [705.0, 8917.277777777777], [706.0, 16535.0], [708.0, 5569.199999999999], [709.0, 7181.071428571428], [710.0, 8830.29411764706], [711.0, 8530.909090909092], [720.0, 6996.619047619047], [734.0, 10604.235294117645], [735.0, 43704.8], [732.0, 10271.625], [733.0, 14950.692307692309], [730.0, 5090.888888888889], [731.0, 8237.625], [728.0, 7772.263157894737], [729.0, 45149.66666666667], [721.0, 5107.727272727273], [722.0, 4624.85], [723.0, 10111.142857142857], [724.0, 21166.05882352941], [725.0, 15151.647058823528], [726.0, 5167.5199999999995], [727.0, 7012.230769230769], [712.0, 16910.565217391308], [713.0, 6295.538461538461], [739.0, 6194.687499999999], [736.0, 5792.0], [750.0, 6928.833333333333], [751.0, 11785.235294117649], [748.0, 11390.954545454546], [749.0, 10471.785714285714], [746.0, 23644.045454545452], [747.0, 33520.818181818184], [737.0, 4201.105263157895], [738.0, 8521.052631578947], [740.0, 4689.0], [741.0, 41684.85714285714], [742.0, 4461.0], [743.0, 3640.6666666666665], [752.0, 9161.6], [766.0, 10595.07142857143], [767.0, 6736.285714285714], [764.0, 15100.214285714284], [765.0, 15621.545454545452], [762.0, 5718.785714285714], [763.0, 59562.23999999999], [760.0, 7967.263157894737], [761.0, 9264.692307692309], [753.0, 9544.35294117647], [754.0, 8913.157894736843], [755.0, 6947.0], [756.0, 8839.5], [757.0, 9227.833333333334], [758.0, 46119.05], [759.0, 4021.090909090909], [744.0, 11587.222222222223], [745.0, 9765.76923076923], [771.0, 7806.0], [768.0, 9389.76923076923], [782.0, 9277.789473684212], [783.0, 6299.347826086957], [780.0, 39363.65217391304], [781.0, 8254.75], [778.0, 8433.533333333333], [779.0, 13353.166666666668], [769.0, 32736.46666666667], [770.0, 9841.615384615385], [772.0, 11376.25], [773.0, 7516.750000000001], [774.0, 13611.4], [775.0, 33409.78947368421], [784.0, 11054.176470588238], [798.0, 48482.208333333336], [799.0, 6663.0], [796.0, 6012.136363636364], [797.0, 7824.874999999998], [794.0, 8466.0625], [795.0, 7022.5], [792.0, 41628.95], [793.0, 10777.105263157893], [785.0, 7972.6], [786.0, 22498.826086956527], [787.0, 5311.59090909091], [788.0, 10744.333333333336], [789.0, 11461.5], [790.0, 11336.0], [791.0, 10218.066666666666], [776.0, 7356.307692307692], [777.0, 9045.941176470587], [803.0, 37041.600000000006], [800.0, 23009.933333333334], [814.0, 8115.928571428571], [815.0, 24624.0], [812.0, 5626.384615384615], [813.0, 17985.6875], [810.0, 11739.111111111113], [811.0, 8762.9], [801.0, 45592.444444444445], [802.0, 5265.944444444444], [804.0, 15256.588235294117], [805.0, 3773.4615384615386], [806.0, 4821.333333333334], [807.0, 11601.210526315786], [816.0, 8241.454545454546], [830.0, 5298.875], [831.0, 10511.2], [828.0, 5985.764705882353], [829.0, 6933.647058823531], [826.0, 29349.72727272727], [827.0, 4625.785714285714], [824.0, 8221.888888888889], [825.0, 11885.29411764706], [817.0, 22850.95652173913], [818.0, 10744.684210526315], [819.0, 67249.94736842105], [820.0, 4499.8125], [821.0, 6712.5], [822.0, 4919.333333333333], [823.0, 9464.857142857143], [808.0, 12956.4], [809.0, 23321.312499999996], [835.0, 5960.12], [832.0, 37645.72727272727], [846.0, 8287.999999999998], [847.0, 7002.625], [844.0, 5339.277777777779], [845.0, 8990.615384615387], [842.0, 3337.764705882353], [843.0, 44553.28], [833.0, 19321.5], [834.0, 4355.312499999999], [836.0, 4906.466666666667], [837.0, 17380.363636363636], [838.0, 9762.363636363636], [839.0, 6312.000000000001], [848.0, 11464.4375], [862.0, 7586.0], [863.0, 8966.833333333334], [860.0, 48589.73333333332], [861.0, 4739.125], [858.0, 12447.888888888889], [859.0, 8208.333333333334], [856.0, 9426.5], [857.0, 4463.571428571428], [849.0, 24467.53846153846], [850.0, 23751.849999999995], [851.0, 5785.714285714284], [852.0, 5454.5], [853.0, 9070.75], [854.0, 48606.96], [855.0, 5601.999999999999], [840.0, 9342.588235294117], [841.0, 10250.53846153846], [867.0, 21081.714285714286], [864.0, 6974.529411764706], [878.0, 11765.75], [879.0, 5493.4], [876.0, 13570.66666666667], [877.0, 46089.049999999996], [874.0, 8473.928571428572], [875.0, 10231.608695652172], [865.0, 9354.899999999998], [866.0, 55356.153846153844], [868.0, 10306.142857142855], [869.0, 6592.875], [870.0, 7399.384615384615], [871.0, 34243.95238095238], [880.0, 9790.714285714286], [894.0, 72934.00000000001], [895.0, 9870.764705882353], [892.0, 5620.5], [893.0, 9894.23076923077], [890.0, 6617.799999999999], [891.0, 7145.08], [888.0, 2809.6666666666665], [889.0, 40572.791666666664], [881.0, 7490.411764705882], [882.0, 6358.615384615384], [883.0, 33122.166666666664], [884.0, 17910.333333333332], [885.0, 5535.714285714285], [886.0, 6022.333333333334], [887.0, 6423.444444444445], [872.0, 4745.999999999999], [873.0, 23149.000000000004], [899.0, 4752.235294117647], [896.0, 5178.117647058824], [910.0, 7355.125000000001], [911.0, 55380.55555555556], [908.0, 10375.23076923077], [909.0, 12498.933333333332], [906.0, 32705.888888888898], [907.0, 11472.0], [897.0, 5836.913043478261], [898.0, 4674.142857142857], [900.0, 58190.8275862069], [901.0, 6030.0666666666675], [902.0, 11944.125], [903.0, 6698.809523809524], [912.0, 8485.57142857143], [926.0, 13227.736842105265], [927.0, 7541.571428571428], [924.0, 20655.7], [925.0, 11886.666666666666], [922.0, 5626.937500000001], [923.0, 28799.125], [920.0, 8117.190476190476], [921.0, 19183.555555555555], [913.0, 10825.04347826087], [914.0, 5881.882352941177], [915.0, 12552.076923076924], [916.0, 6922.7692307692305], [917.0, 46333.85185185185], [918.0, 29631.714285714286], [919.0, 12406.583333333334], [904.0, 5839.666666666667], [905.0, 5708.466666666665], [931.0, 6615.714285714285], [928.0, 35352.04347826087], [942.0, 8264.714285714286], [943.0, 7332.333333333333], [940.0, 59305.33333333333], [941.0, 19303.666666666668], [938.0, 13274.8125], [939.0, 9232.625], [929.0, 20487.583333333332], [930.0, 8737.875], [932.0, 12284.1875], [933.0, 8614.5], [934.0, 55643.961538461524], [935.0, 10450.666666666666], [944.0, 4935.933333333333], [958.0, 5201.75], [959.0, 25653.750000000004], [956.0, 4308.75], [957.0, 26045.421052631573], [954.0, 6845.4], [955.0, 7731.944444444443], [952.0, 8348.272727272728], [953.0, 8274.857142857143], [945.0, 35537.61111111111], [946.0, 13964.625000000004], [947.0, 7032.666666666667], [948.0, 7373.277777777777], [949.0, 7448.933333333333], [950.0, 7531.785714285714], [951.0, 47131.55555555556], [936.0, 7273.066666666667], [937.0, 12012.400000000001], [963.0, 16474.421052631576], [960.0, 6988.529411764706], [974.0, 15856.434782608694], [975.0, 12708.812500000004], [972.0, 12200.416666666668], [973.0, 11730.368421052632], [970.0, 6816.076923076922], [971.0, 12089.941176470591], [961.0, 7748.384615384615], [962.0, 9356.333333333334], [964.0, 16350.000000000002], [965.0, 6334.076923076923], [966.0, 9249.77777777778], [967.0, 8739.352941176468], [976.0, 10222.578947368422], [990.0, 8233.833333333332], [991.0, 45658.966666666674], [988.0, 11533.4], [989.0, 10455.2], [986.0, 21767.470588235294], [987.0, 10715.166666666668], [984.0, 16421.77777777778], [985.0, 24762.391304347828], [977.0, 16609.0], [978.0, 10426.42857142857], [979.0, 11840.411764705883], [980.0, 21741.399999999998], [981.0, 7914.428571428571], [982.0, 5144.285714285714], [983.0, 7180.916666666667], [968.0, 35795.95238095238], [969.0, 10013.181818181818], [995.0, 19547.444444444445], [992.0, 24316.375000000007], [993.0, 8521.57142857143], [994.0, 5897.625], [996.0, 6713.368421052632], [997.0, 16821.92], [998.0, 12682.391304347824], [999.0, 5257.666666666667], [1000.0, 13070.690375070328]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[973.8502070283905, 13297.52473896105]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.50807054E12, "maxY": 935644.9, "series": [{"data": [[1.50807126E12, 94138.83333333333], [1.50807348E12, 101000.23333333334], [1.50807186E12, 328388.11666666664], [1.50807408E12, 935644.9], [1.5080751E12, 99249.8], [1.50807228E12, 98454.33333333333], [1.5080739E12, 95853.98333333334], [1.5080745E12, 96692.33333333333], [1.50807066E12, 89774.16666666667], [1.50807288E12, 91259.48333333334], [1.50807204E12, 88650.65], [1.50807366E12, 95895.68333333333], [1.50807426E12, 97102.46666666666], [1.50807264E12, 91112.61666666667], [1.50807084E12, 94197.11666666667], [1.50807528E12, 97035.11666666667], [1.50807246E12, 238804.3], [1.50807144E12, 140539.31666666668], [1.50807306E12, 162413.21666666667], [1.50807468E12, 178233.41666666666], [1.5080706E12, 112779.7], [1.50807504E12, 95807.45], [1.50807222E12, 97284.13333333333], [1.50807444E12, 99058.03333333334], [1.5080712E12, 97704.2], [1.50807282E12, 92280.8], [1.50807102E12, 109799.33333333333], [1.50807324E12, 93320.3], [1.50807546E12, 3854.3], [1.50807162E12, 100965.46666666666], [1.50807384E12, 98165.36666666667], [1.50807486E12, 95496.4], [1.50807078E12, 91113.28333333334], [1.508073E12, 211577.1], [1.50807522E12, 543373.5666666667], [1.5080736E12, 481825.25], [1.50807138E12, 204407.31666666668], [1.50807462E12, 97124.56666666667], [1.5080718E12, 94695.88333333333], [1.50807342E12, 89531.9], [1.5080724E12, 113901.93333333333], [1.50807402E12, 94222.7], [1.50807156E12, 95921.43333333333], [1.50807318E12, 96368.4], [1.50807216E12, 97385.01666666666], [1.50807378E12, 98339.6], [1.5080754E12, 14984.716666666667], [1.5080748E12, 98555.06666666667], [1.50807198E12, 88781.13333333333], [1.5080742E12, 501136.13333333336], [1.50807096E12, 93791.2], [1.50807258E12, 96775.11666666667], [1.50807174E12, 99333.56666666667], [1.50807396E12, 99280.58333333333], [1.50807072E12, 88838.45], [1.50807234E12, 96989.46666666666], [1.50807456E12, 98810.16666666667], [1.50807558E12, 125.98333333333333], [1.50807438E12, 94869.35], [1.50807054E12, 54423.03333333333], [1.50807276E12, 96495.11666666667], [1.50807498E12, 97441.63333333333], [1.50807114E12, 114775.1], [1.50807336E12, 89289.15], [1.50807414E12, 863451.5666666667], [1.50807252E12, 508025.18333333335], [1.50807474E12, 260174.38333333333], [1.5080709E12, 94101.25], [1.50807312E12, 93273.98333333334], [1.50807132E12, 86695.2], [1.50807294E12, 452381.01666666666], [1.50807192E12, 196994.86666666667], [1.50807354E12, 594779.4166666666], [1.50807516E12, 137449.51666666666], [1.50807108E12, 165950.85], [1.5080727E12, 92607.81666666667], [1.50807168E12, 95414.93333333333], [1.5080733E12, 94332.98333333334], [1.50807492E12, 97360.95], [1.5080715E12, 176690.26666666666], [1.50807372E12, 101092.21666666666], [1.5080721E12, 94726.55], [1.50807432E12, 96325.21666666666], [1.50807534E12, 89319.08333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.50807126E12, 5033.25], [1.50807348E12, 5220.0], [1.50807186E12, 4686.75], [1.50807408E12, 5064.75], [1.5080751E12, 5337.0], [1.50807228E12, 5341.5], [1.5080739E12, 5188.5], [1.5080745E12, 5148.0], [1.50807066E12, 5321.25], [1.50807288E12, 4862.25], [1.50807204E12, 4630.5], [1.50807366E12, 5334.75], [1.50807426E12, 5346.0], [1.50807264E12, 4621.5], [1.50807084E12, 5132.25], [1.50807528E12, 5206.5], [1.50807246E12, 5253.75], [1.50807144E12, 4997.25], [1.50807306E12, 5289.75], [1.50807468E12, 5393.25], [1.5080706E12, 6909.75], [1.50807504E12, 5139.0], [1.50807222E12, 5337.0], [1.50807444E12, 5312.25], [1.5080712E12, 5062.5], [1.50807282E12, 4981.5], [1.50807102E12, 4952.25], [1.50807324E12, 5013.0], [1.50807546E12, 0.0], [1.50807162E12, 5303.25], [1.50807384E12, 5208.75], [1.50807486E12, 5121.0], [1.50807078E12, 5186.25], [1.508073E12, 5208.75], [1.50807522E12, 4630.5], [1.5080736E12, 5058.0], [1.50807138E12, 4891.5], [1.50807462E12, 5186.25], [1.5080718E12, 4995.0], [1.50807342E12, 4837.5], [1.5080724E12, 5267.25], [1.50807402E12, 5087.25], [1.50807156E12, 5271.75], [1.50807318E12, 5082.75], [1.50807216E12, 5179.5], [1.50807378E12, 5467.5], [1.5080754E12, 254.25], [1.5080748E12, 5220.0], [1.50807198E12, 4578.75], [1.5080742E12, 5100.75], [1.50807096E12, 4979.25], [1.50807258E12, 5366.25], [1.50807174E12, 5292.0], [1.50807396E12, 5465.25], [1.50807072E12, 5262.75], [1.50807234E12, 5280.75], [1.50807456E12, 5420.25], [1.50807558E12, 0.0], [1.50807438E12, 5089.5], [1.50807054E12, 3345.75], [1.50807276E12, 5134.5], [1.50807498E12, 5197.5], [1.50807114E12, 5186.25], [1.50807336E12, 4682.25], [1.50807414E12, 5094.0], [1.50807252E12, 5071.5], [1.50807474E12, 5231.25], [1.5080709E12, 5024.25], [1.50807312E12, 5073.75], [1.50807132E12, 4342.5], [1.50807294E12, 4916.25], [1.50807192E12, 5107.5], [1.50807354E12, 4981.5], [1.50807516E12, 5190.75], [1.50807108E12, 5186.25], [1.5080727E12, 5013.0], [1.50807168E12, 5190.75], [1.5080733E12, 5033.25], [1.50807492E12, 5213.25], [1.5080715E12, 4700.25], [1.50807372E12, 5217.75], [1.5080721E12, 5197.5], [1.50807432E12, 5121.0], [1.50807534E12, 4635.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.50807558E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 202.36987222595835, "minX": 1.50807054E12, "maxY": 3875133.3333333335, "series": [{"data": [[1.50807126E12, 18555.953779866908], [1.50807348E12, 22700.514808043903], [1.50807186E12, 6802.999883761469], [1.50807408E12, 2561.3650682677912], [1.5080751E12, 21104.05829929447], [1.50807228E12, 20491.546576879908], [1.5080739E12, 24100.29603998461], [1.5080745E12, 19157.162852784182], [1.50807066E12, 5437.605553287064], [1.50807288E12, 20698.17616161613], [1.50807204E12, 23890.69330004166], [1.50807366E12, 18749.52724481971], [1.50807426E12, 20041.79787637468], [1.50807264E12, 29520.114807302154], [1.50807084E12, 14029.575224697146], [1.50807528E12, 21363.95442461067], [1.50807246E12, 9783.407366248633], [1.50807144E12, 16154.786304289859], [1.50807306E12, 13825.734566474008], [1.50807468E12, 13143.502322635115], [1.5080706E12, 2261.558584875042], [1.50807504E12, 22738.33525789073], [1.50807222E12, 20149.0738077214], [1.50807444E12, 23279.441340782087], [1.5080712E12, 22553.9588213072], [1.50807282E12, 21559.250000000004], [1.50807102E12, 18160.297937098454], [1.50807324E12, 24497.290003950955], [1.50807546E12, 545325.5154639179], [1.50807162E12, 22811.6355003652], [1.50807384E12, 24508.371664787654], [1.50807486E12, 22194.9120030876], [1.50807078E12, 9345.325131101248], [1.508073E12, 10616.384519127645], [1.50807522E12, 4975.755031424346], [1.5080736E12, 5089.9587407584], [1.50807138E12, 8977.768974453877], [1.50807462E12, 23421.859908883824], [1.5080718E12, 25780.23733437253], [1.50807342E12, 20894.104526748968], [1.5080724E12, 17702.81205211727], [1.50807402E12, 23298.18356164384], [1.50807156E12, 17680.260069044933], [1.50807318E12, 24844.455764075086], [1.50807216E12, 24695.74838954145], [1.50807378E12, 19268.66991017961], [1.5080754E12, 202890.41282051275], [1.5080748E12, 25549.710969674314], [1.50807198E12, 28273.22129783694], [1.5080742E12, 4981.643015521058], [1.50807096E12, 18916.171451042115], [1.50807258E12, 19725.250950570306], [1.50807174E12, 25249.891942072063], [1.50807396E12, 20265.43323442137], [1.50807072E12, 7358.222038794866], [1.50807234E12, 22901.565729483264], [1.50807456E12, 16973.05625931453], [1.50807558E12, 3875133.3333333335], [1.50807438E12, 24263.970851146543], [1.50807054E12, 202.36987222595835], [1.50807276E12, 23166.150554069547], [1.50807498E12, 22550.581536133115], [1.50807114E12, 13520.805241022324], [1.50807336E12, 24678.821487603353], [1.50807414E12, 3200.880969351429], [1.50807252E12, 5682.137070006021], [1.50807474E12, 9175.369235259803], [1.5080709E12, 17391.001959247624], [1.50807312E12, 19799.667061611402], [1.50807132E12, 23977.17270788912], [1.50807294E12, 5442.117149145072], [1.50807192E12, 10388.70264570552], [1.50807354E12, 4475.87695186474], [1.50807516E12, 14428.708729942902], [1.50807108E12, 11180.448572723122], [1.5080727E12, 22790.23955431751], [1.50807168E12, 23586.854383932034], [1.5080733E12, 22342.91594996087], [1.50807492E12, 23524.78560606058], [1.5080715E12, 10111.307478632452], [1.50807372E12, 23683.1471877282], [1.5080721E12, 20396.91096423017], [1.50807432E12, 25020.24166985826], [1.50807534E12, 34341.57402812238]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.50807558E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.50807054E12, "maxY": 16513.823076923098, "series": [{"data": [[1.50807126E12, 6524.93458676067], [1.50807348E12, 5549.818647166369], [1.50807186E12, 2009.0815994420498], [1.50807408E12, 754.0604128968585], [1.5080751E12, 6454.012625324907], [1.50807228E12, 6188.349420127207], [1.5080739E12, 6840.958861976163], [1.5080745E12, 6415.558352402749], [1.50807066E12, 4945.386688444258], [1.50807288E12, 6858.136969696971], [1.50807204E12, 7423.5830212234805], [1.50807366E12, 6720.202225633142], [1.50807426E12, 7394.7808115282405], [1.50807264E12, 6617.636916835699], [1.50807084E12, 6210.9218444705075], [1.50807528E12, 6280.948727687051], [1.50807246E12, 2622.817590093663], [1.50807144E12, 4438.989075406357], [1.50807306E12, 4163.3061271676315], [1.50807468E12, 3773.895692567565], [1.5080706E12, 2214.453099642974], [1.50807504E12, 6114.154349499616], [1.50807222E12, 6589.538607115825], [1.50807444E12, 5923.814152700197], [1.5080712E12, 6937.153003400081], [1.50807282E12, 7079.079073482433], [1.50807102E12, 6376.247886371337], [1.50807324E12, 6682.410114579213], [1.50807546E12, 0.0], [1.50807162E12, 6354.127830533235], [1.50807384E12, 6140.504697482149], [1.50807486E12, 6052.1443458124295], [1.50807078E12, 5746.794675272281], [1.508073E12, 2901.03307114766], [1.50807522E12, 1147.314525810328], [1.5080736E12, 1707.478893393752], [1.50807138E12, 3321.5649759348325], [1.50807462E12, 6001.208048595299], [1.5080718E12, 6529.468823070921], [1.50807342E12, 6719.17530864197], [1.5080724E12, 5378.044299674287], [1.50807402E12, 6461.188649706458], [1.50807156E12, 6950.708093594171], [1.50807318E12, 6383.864036767512], [1.50807216E12, 6257.569533914373], [1.50807378E12, 6377.063622754499], [1.5080754E12, 16513.823076923098], [1.5080748E12, 6473.035567203288], [1.50807198E12, 6861.7208818635645], [1.5080742E12, 1707.7169508372194], [1.50807096E12, 7433.858828155727], [1.50807258E12, 7008.1049429657705], [1.50807174E12, 6169.227998514658], [1.50807396E12, 6692.743323442136], [1.50807072E12, 6524.439125051592], [1.50807234E12, 6605.328267477211], [1.50807456E12, 6116.479135618481], [1.50807558E12, 0.0], [1.50807438E12, 6757.390205985229], [1.50807054E12, 199.44048419636837], [1.50807276E12, 6440.430263660679], [1.50807498E12, 6501.100264850536], [1.50807114E12, 5459.989323843396], [1.50807336E12, 6732.938016528922], [1.50807414E12, 894.0512740555909], [1.50807252E12, 1514.2657664453857], [1.50807474E12, 2372.577933450087], [1.5080709E12, 7221.998432601898], [1.50807312E12, 6315.516982622437], [1.50807132E12, 7525.667803837946], [1.50807294E12, 1364.3118334179703], [1.50807192E12, 3234.627108895699], [1.50807354E12, 1277.723061040135], [1.50807516E12, 4955.400598313851], [1.50807108E12, 3643.9567285908397], [1.5080727E12, 6840.064464783124], [1.50807168E12, 6583.273078408654], [1.5080733E12, 6245.240813135244], [1.50807492E12, 6308.214772727279], [1.5080715E12, 4940.126923076923], [1.50807372E12, 5821.691380569763], [1.5080721E12, 6414.183903576976], [1.50807432E12, 6849.949827652223], [1.50807534E12, 9143.100909842862]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.50807558E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 45.93611297915268, "minX": 1.50807054E12, "maxY": 3875133.3333333335, "series": [{"data": [[1.50807126E12, 16882.390520955763], [1.50807348E12, 21009.58939670928], [1.50807186E12, 6238.181215854938], [1.50807408E12, 2396.0623869057276], [1.5080751E12, 19177.42814704786], [1.50807228E12, 18621.154882154875], [1.5080739E12, 22296.257208765852], [1.5080745E12, 17546.599923722377], [1.50807066E12, 3818.4442629644736], [1.50807288E12, 18766.889292929332], [1.50807204E12, 21962.023304203], [1.50807366E12, 16839.846124328476], [1.50807426E12, 18263.197572999652], [1.50807264E12, 27864.040973630857], [1.50807084E12, 12117.326690113336], [1.50807528E12, 19742.520698822653], [1.50807246E12, 9144.868233052826], [1.50807144E12, 14730.013056221711], [1.50807306E12, 12588.038612716771], [1.50807468E12, 12179.029138513524], [1.5080706E12, 1303.2025316455708], [1.50807504E12, 20818.93802925327], [1.50807222E12, 18270.440953822832], [1.50807444E12, 21826.973184357543], [1.5080712E12, 20479.993577635043], [1.50807282E12, 19714.600638977572], [1.50807102E12, 16508.05140344943], [1.50807324E12, 22758.129197945495], [1.50807546E12, 545325.5154639179], [1.50807162E12, 20983.636961285632], [1.50807384E12, 22921.53400977076], [1.50807486E12, 20281.536086453067], [1.50807078E12, 7704.693828156524], [1.508073E12, 9840.988916696457], [1.50807522E12, 4669.784902196166], [1.5080736E12, 4679.296048970504], [1.50807138E12, 7935.160681229182], [1.50807462E12, 21481.650341685625], [1.5080718E12, 23959.373733437264], [1.50807342E12, 18764.272427983527], [1.5080724E12, 16355.048208469072], [1.50807402E12, 21633.40704500973], [1.50807156E12, 15312.681626390477], [1.50807318E12, 23218.688625047886], [1.50807216E12, 23183.117468738186], [1.50807378E12, 17407.390718562827], [1.5080754E12, 201543.36923076925], [1.5080748E12, 23848.83601647324], [1.50807198E12, 26397.39267886855], [1.5080742E12, 4699.883553788511], [1.50807096E12, 17182.356272119552], [1.50807258E12, 17923.174144486726], [1.50807174E12, 23357.484218343903], [1.50807396E12, 18533.12129080124], [1.50807072E12, 5567.744118860918], [1.50807234E12, 21357.27317629179], [1.50807456E12, 15238.097242921005], [1.50807558E12, 3875133.3333333335], [1.50807438E12, 22561.230470268216], [1.50807054E12, 45.93611297915268], [1.50807276E12, 21398.424914023628], [1.50807498E12, 20430.361331819928], [1.50807114E12, 12166.714978971191], [1.50807336E12, 22759.822314049583], [1.50807414E12, 3019.490600498911], [1.50807252E12, 5398.228047676538], [1.50807474E12, 8567.79465849385], [1.5080709E12, 15442.183777429464], [1.50807312E12, 17850.717614533976], [1.50807132E12, 21594.706183368886], [1.50807294E12, 5115.927289656352], [1.50807192E12, 9461.957055214743], [1.50807354E12, 4186.967995870441], [1.50807516E12, 13217.465868914918], [1.50807108E12, 10113.457861350244], [1.5080727E12, 21079.16195781933], [1.50807168E12, 21881.275395905785], [1.5080733E12, 20466.52384675529], [1.50807492E12, 21911.078030303044], [1.5080715E12, 9138.825213675223], [1.50807372E12, 21982.345507669812], [1.5080721E12, 18791.124416796294], [1.50807432E12, 23398.332056683295], [1.50807534E12, 32513.622001654265]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.50807558E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 76.0, "minX": 1.50807054E12, "maxY": 258020.0, "series": [{"data": [[1.50807126E12, 87419.0], [1.50807348E12, 85871.0], [1.50807186E12, 235826.0], [1.50807408E12, 114761.0], [1.5080751E12, 119153.0], [1.50807228E12, 78988.0], [1.5080739E12, 102445.0], [1.5080745E12, 116997.0], [1.50807066E12, 69821.0], [1.50807288E12, 119680.0], [1.50807204E12, 113675.0], [1.50807366E12, 78077.0], [1.50807426E12, 110873.0], [1.50807264E12, 84854.0], [1.50807084E12, 118274.0], [1.50807528E12, 129262.0], [1.50807246E12, 86317.0], [1.50807144E12, 166298.0], [1.50807306E12, 255038.0], [1.50807468E12, 75479.0], [1.5080706E12, 21424.0], [1.50807504E12, 76918.0], [1.50807222E12, 110784.0], [1.50807444E12, 100932.0], [1.5080712E12, 210667.0], [1.50807282E12, 107370.0], [1.50807102E12, 258020.0], [1.50807324E12, 103458.0], [1.50807162E12, 110041.0], [1.50807384E12, 85656.0], [1.50807486E12, 99607.0], [1.50807078E12, 99443.0], [1.508073E12, 151846.0], [1.50807522E12, 132090.0], [1.5080736E12, 122948.0], [1.50807138E12, 215872.0], [1.50807462E12, 168692.0], [1.5080718E12, 101591.0], [1.50807342E12, 102074.0], [1.5080724E12, 127428.0], [1.50807402E12, 104931.0], [1.50807156E12, 125276.0], [1.50807318E12, 153722.0], [1.50807216E12, 112218.0], [1.50807378E12, 130674.0], [1.5080754E12, 213333.0], [1.5080748E12, 82768.0], [1.50807198E12, 239212.0], [1.5080742E12, 100663.0], [1.50807096E12, 103969.0], [1.50807258E12, 103731.0], [1.50807174E12, 131958.0], [1.50807396E12, 134556.0], [1.50807072E12, 73973.0], [1.50807234E12, 100540.0], [1.50807456E12, 83309.0], [1.50807438E12, 104178.0], [1.50807054E12, 2811.0], [1.50807276E12, 215057.0], [1.50807498E12, 123259.0], [1.50807114E12, 88513.0], [1.50807336E12, 104509.0], [1.50807414E12, 230590.0], [1.50807252E12, 219405.0], [1.50807474E12, 101367.0], [1.5080709E12, 115528.0], [1.50807312E12, 101174.0], [1.50807132E12, 223055.0], [1.50807294E12, 109223.0], [1.50807192E12, 115526.0], [1.50807354E12, 75026.0], [1.50807516E12, 124919.0], [1.50807108E12, 113372.0], [1.5080727E12, 88122.0], [1.50807168E12, 104783.0], [1.5080733E12, 240692.0], [1.50807492E12, 123532.0], [1.5080715E12, 225103.0], [1.50807372E12, 101177.0], [1.5080721E12, 85287.0], [1.50807432E12, 79060.0], [1.50807534E12, 100262.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.50807126E12, 302.0], [1.50807348E12, 324.0], [1.50807186E12, 312.0], [1.50807408E12, 316.0], [1.5080751E12, 316.0], [1.50807228E12, 298.0], [1.5080739E12, 315.0], [1.5080745E12, 309.0], [1.50807066E12, 317.0], [1.50807288E12, 324.0], [1.50807204E12, 327.0], [1.50807366E12, 294.0], [1.50807426E12, 304.0], [1.50807264E12, 325.0], [1.50807084E12, 325.0], [1.50807528E12, 310.0], [1.50807246E12, 302.0], [1.50807144E12, 316.0], [1.50807306E12, 298.0], [1.50807468E12, 309.0], [1.5080706E12, 276.0], [1.50807504E12, 297.0], [1.50807222E12, 316.0], [1.50807444E12, 306.0], [1.5080712E12, 314.0], [1.50807282E12, 324.0], [1.50807102E12, 321.0], [1.50807324E12, 321.0], [1.50807162E12, 312.0], [1.50807384E12, 306.0], [1.50807486E12, 319.0], [1.50807078E12, 313.0], [1.508073E12, 306.0], [1.50807522E12, 305.0], [1.5080736E12, 326.0], [1.50807138E12, 305.0], [1.50807462E12, 320.0], [1.5080718E12, 311.0], [1.50807342E12, 320.0], [1.5080724E12, 316.0], [1.50807402E12, 310.0], [1.50807156E12, 300.0], [1.50807318E12, 295.0], [1.50807216E12, 297.0], [1.50807378E12, 314.0], [1.5080754E12, 21978.0], [1.5080748E12, 312.0], [1.50807198E12, 313.0], [1.5080742E12, 307.0], [1.50807096E12, 325.0], [1.50807258E12, 313.0], [1.50807174E12, 314.0], [1.50807396E12, 312.0], [1.50807072E12, 306.0], [1.50807234E12, 308.0], [1.50807456E12, 305.0], [1.50807438E12, 315.0], [1.50807054E12, 76.0], [1.50807276E12, 303.0], [1.50807498E12, 320.0], [1.50807114E12, 317.0], [1.50807336E12, 313.0], [1.50807414E12, 320.0], [1.50807252E12, 311.0], [1.50807474E12, 306.0], [1.5080709E12, 303.0], [1.50807312E12, 321.0], [1.50807132E12, 303.0], [1.50807294E12, 287.0], [1.50807192E12, 311.0], [1.50807354E12, 299.0], [1.50807516E12, 320.0], [1.50807108E12, 292.0], [1.5080727E12, 309.0], [1.50807168E12, 310.0], [1.5080733E12, 309.0], [1.50807492E12, 318.0], [1.5080715E12, 262.0], [1.50807372E12, 313.0], [1.5080721E12, 314.0], [1.50807432E12, 328.0], [1.50807534E12, 310.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.50807126E12, 15563.200000000012], [1.50807348E12, 13812.600000000006], [1.50807186E12, 16720.800000000003], [1.50807408E12, 14206.600000000035], [1.5080751E12, 13667.100000000013], [1.50807228E12, 14084.400000000009], [1.5080739E12, 15572.000000000015], [1.5080745E12, 17189.700000000004], [1.50807066E12, 6565.0000000000055], [1.50807288E12, 16562.300000000025], [1.50807204E12, 14550.700000000048], [1.50807366E12, 16706.70000000002], [1.50807426E12, 17298.000000000015], [1.50807264E12, 14484.700000000004], [1.50807084E12, 9782.1], [1.50807528E12, 13884.700000000004], [1.50807246E12, 13822.400000000009], [1.50807144E12, 17083.200000000026], [1.50807306E12, 14539.800000000003], [1.50807468E12, 14229.000000000058], [1.5080706E12, 4324.600000000002], [1.50807504E12, 13407.300000000025], [1.50807222E12, 14336.300000000025], [1.50807444E12, 17208.600000000006], [1.5080712E12, 15137.100000000115], [1.50807282E12, 16513.700000000004], [1.50807102E12, 11398.200000000012], [1.50807324E12, 14085.60000000002], [1.50807162E12, 17331.9], [1.50807384E12, 15661.700000000048], [1.50807486E12, 13239.400000000009], [1.50807078E12, 9237.2], [1.508073E12, 16424.9], [1.50807522E12, 13895.000000000015], [1.5080736E12, 16470.30000000001], [1.50807138E12, 17219.40000000001], [1.50807462E12, 16579.9], [1.5080718E12, 16953.20000000001], [1.50807342E12, 14141.700000000004], [1.5080724E12, 13945.800000000003], [1.50807402E12, 15984.000000000073], [1.50807156E12, 17365.9], [1.50807318E12, 14126.200000000012], [1.50807216E12, 14254.90000000003], [1.50807378E12, 15771.200000000099], [1.5080754E12, 17312.700000000004], [1.5080748E12, 13641.500000000007], [1.50807198E12, 16164.700000000019], [1.5080742E12, 16775.800000000003], [1.50807096E12, 10863.5], [1.50807258E12, 14282.400000000023], [1.50807174E12, 17004.500000000007], [1.50807396E12, 15556.20000000004], [1.50807072E12, 8704.400000000001], [1.50807234E12, 14267.60000000005], [1.50807456E12, 17235.200000000026], [1.50807438E12, 17439.700000000004], [1.50807054E12, 356.0], [1.50807276E12, 15409.500000000022], [1.50807498E12, 13693.30000000001], [1.50807114E12, 13960.900000000001], [1.50807336E12, 14111.600000000006], [1.50807414E12, 14889.700000000033], [1.50807252E12, 14960.600000000035], [1.50807474E12, 13817.700000000033], [1.5080709E12, 10383.0], [1.50807312E12, 14141.900000000001], [1.50807132E12, 16683.900000000016], [1.50807294E12, 16575.30000000001], [1.50807192E12, 16228.900000000001], [1.50807354E12, 14614.0], [1.50807516E12, 13702.900000000001], [1.50807108E12, 12568.700000000004], [1.5080727E12, 15425.400000000023], [1.50807168E12, 17217.600000000006], [1.5080733E12, 14026.100000000013], [1.50807492E12, 13169.700000000004], [1.5080715E12, 17474.800000000003], [1.50807372E12, 16444.90000000003], [1.5080721E12, 14358.900000000001], [1.50807432E12, 17370.30000000001], [1.50807534E12, 16631.100000000013]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.50807126E12, 68557.97], [1.50807348E12, 68228.99], [1.50807186E12, 69944.60000000006], [1.50807408E12, 68421.65000000005], [1.5080751E12, 68435.93000000001], [1.50807228E12, 68678.98000000001], [1.5080739E12, 68253.89000000001], [1.5080745E12, 69004.63000000006], [1.50807066E12, 19197.56], [1.50807288E12, 68676.82000000004], [1.50807204E12, 68819.0], [1.50807366E12, 68228.99], [1.50807426E12, 69071.93000000001], [1.50807264E12, 68556.75000000004], [1.50807084E12, 41444.84000000006], [1.50807528E12, 68523.85000000002], [1.50807246E12, 68366.97], [1.50807144E12, 69117.86000000002], [1.50807306E12, 68826.91000000002], [1.50807468E12, 68481.98000000001], [1.5080706E12, 10499.869999999999], [1.50807504E12, 68454.82000000004], [1.50807222E12, 68678.98000000001], [1.50807444E12, 68922.91000000002], [1.5080712E12, 68427.99], [1.50807282E12, 68703.95000000001], [1.50807102E12, 67227.92000000001], [1.50807324E12, 68697.61000000006], [1.50807162E12, 70511.87000000002], [1.50807384E12, 68176.98000000001], [1.50807486E12, 68220.97], [1.50807078E12, 37207.799999999996], [1.508073E12, 68826.97], [1.50807522E12, 68689.74000000005], [1.5080736E12, 68289.79000000004], [1.50807138E12, 69103.80000000003], [1.50807462E12, 68926.96], [1.5080718E12, 69991.94], [1.50807342E12, 68371.90000000002], [1.5080724E12, 68566.98000000001], [1.50807402E12, 68572.67000000006], [1.50807156E12, 70575.78000000003], [1.50807318E12, 68697.61000000006], [1.50807216E12, 68662.86000000002], [1.50807378E12, 68176.98000000001], [1.5080754E12, 68569.68000000005], [1.5080748E12, 68623.67000000006], [1.50807198E12, 70260.23000000013], [1.5080742E12, 68944.82000000004], [1.50807096E12, 66244.59999999998], [1.50807258E12, 68514.56000000007], [1.50807174E12, 70019.91000000002], [1.50807396E12, 68457.72000000004], [1.50807072E12, 35121.37], [1.50807234E12, 68708.78000000003], [1.50807456E12, 69004.63000000006], [1.50807438E12, 69213.57000000007], [1.50807054E12, 1272.3599999999997], [1.50807276E12, 68529.96], [1.50807498E12, 68575.94], [1.50807114E12, 68135.64000000006], [1.50807336E12, 68436.94], [1.50807414E12, 68468.89000000001], [1.50807252E12, 68391.76000000004], [1.50807474E12, 68698.0], [1.5080709E12, 53808.50000000043], [1.50807312E12, 68703.95000000001], [1.50807132E12, 69025.0], [1.50807294E12, 68762.41000000009], [1.50807192E12, 70094.03000000016], [1.50807354E12, 68219.89000000001], [1.50807516E12, 68689.74000000005], [1.50807108E12, 67571.85000000002], [1.5080727E12, 68613.71000000005], [1.50807168E12, 70496.46000000008], [1.5080733E12, 68623.80000000003], [1.50807492E12, 68423.96], [1.5080715E12, 70591.91000000002], [1.50807372E12, 68177.0], [1.5080721E12, 68701.78000000003], [1.50807432E12, 69137.97], [1.50807534E12, 68536.93000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.50807126E12, 33533.75], [1.50807348E12, 32933.90000000003], [1.50807186E12, 34044.8], [1.50807408E12, 33466.95], [1.5080751E12, 27806.150000000085], [1.50807228E12, 33442.0], [1.5080739E12, 33753.65000000001], [1.5080745E12, 34308.8], [1.50807066E12, 9771.799999999996], [1.50807288E12, 33714.45000000004], [1.50807204E12, 33531.850000000006], [1.50807366E12, 34136.75], [1.50807426E12, 34447.9], [1.50807264E12, 33242.45000000004], [1.50807084E12, 15795.24999999996], [1.50807528E12, 32429.30000000017], [1.50807246E12, 32640.850000000075], [1.50807144E12, 34146.0], [1.50807306E12, 33819.9], [1.50807468E12, 33272.9], [1.5080706E12, 5913.050000000004], [1.50807504E12, 26677.00000000006], [1.50807222E12, 33502.850000000006], [1.50807444E12, 34298.95], [1.5080712E12, 33470.8], [1.50807282E12, 33632.9], [1.50807102E12, 19534.650000000005], [1.50807324E12, 33407.45000000001], [1.50807162E12, 34566.850000000006], [1.50807384E12, 33918.10000000003], [1.50807486E12, 27497.050000000334], [1.50807078E12, 13126.000000000004], [1.508073E12, 33921.65000000001], [1.50807522E12, 32099.60000000072], [1.5080736E12, 33882.95], [1.50807138E12, 34339.8], [1.50807462E12, 33846.0], [1.5080718E12, 34166.8], [1.50807342E12, 33397.0], [1.5080724E12, 33051.550000000076], [1.50807402E12, 33937.0], [1.50807156E12, 34504.15000000001], [1.50807318E12, 33510.50000000001], [1.50807216E12, 33445.8], [1.50807378E12, 33832.0], [1.5080754E12, 33931.0], [1.5080748E12, 32701.750000000004], [1.50807198E12, 34101.65000000001], [1.5080742E12, 34007.15000000001], [1.50807096E12, 18442.25], [1.50807258E12, 32894.95], [1.50807174E12, 34107.700000000004], [1.50807396E12, 33835.8], [1.50807072E12, 11614.950000000024], [1.50807234E12, 33454.55], [1.50807456E12, 34242.95], [1.50807438E12, 34580.9], [1.50807054E12, 541.0], [1.50807276E12, 33510.700000000004], [1.50807498E12, 32753.0], [1.50807114E12, 27814.40000000001], [1.50807336E12, 33325.20000000001], [1.50807414E12, 33539.700000000004], [1.50807252E12, 33301.40000000001], [1.50807474E12, 32856.700000000004], [1.5080709E12, 17426.5], [1.50807312E12, 33588.600000000006], [1.50807132E12, 34032.95000000001], [1.50807294E12, 33836.15000000001], [1.50807192E12, 33973.9], [1.50807354E12, 33491.9], [1.50807516E12, 30968.60000000002], [1.50807108E12, 21489.850000000002], [1.5080727E12, 33511.95], [1.50807168E12, 34516.9], [1.5080733E12, 33415.05000000002], [1.50807492E12, 28261.05000000003], [1.5080715E12, 34608.600000000006], [1.50807372E12, 33936.15000000001], [1.5080721E12, 33512.75], [1.50807432E12, 34452.75], [1.50807534E12, 33367.95000000001]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5080754E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 3744772.0, "series": [{"data": [[39.0, 4878.0], [40.0, 4310.0], [41.0, 4241.0], [42.0, 4139.0], [43.0, 4113.0], [44.0, 3925.0], [45.0, 3936.5], [49.0, 4367.0], [51.0, 2869.0], [61.0, 4236.0], [62.0, 4421.0], [73.0, 3726.0], [72.0, 4011.0], [78.0, 4288.0], [86.0, 4135.0], [90.0, 4415.5], [93.0, 3584.0], [6.0, 64630.0], [104.0, 4065.0], [114.0, 3863.0], [143.0, 4623.0], [196.0, 4079.0], [209.0, 5066.5], [220.0, 4252.5], [217.0, 4660.0], [236.0, 4571.5], [258.0, 4982.0], [374.0, 4168.5], [24.0, 99.0], [405.0, 4400.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 3744772.0], [39.0, 129742.0], [40.0, 129608.0], [41.0, 129794.0], [42.0, 129783.0], [43.0, 129972.0], [44.0, 130015.0], [45.0, 130033.0], [49.0, 9.0], [51.0, 5.0], [61.0, 6.0], [62.0, 4.0], [73.0, 4.0], [72.0, 5.0], [78.0, 5.0], [86.0, 4.0], [90.0, 3.0], [93.0, 5.0], [6.0, 131057.0], [104.0, 5.0], [114.0, 6.0], [143.0, 4.0], [196.0, 7.0], [209.0, 20.0], [220.0, 5.0], [217.0, 13.0], [236.0, 6.0], [258.0, 12.0], [1.0, 495664.0], [374.0, 10.0], [405.0, 13.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 405.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 64628.0, "series": [{"data": [[39.0, 4843.0], [40.0, 4288.0], [41.0, 4218.0], [42.0, 4120.0], [43.0, 4082.5], [44.0, 3904.0], [45.0, 3918.5], [49.0, 4364.0], [51.0, 2864.0], [61.0, 4208.0], [62.0, 4369.0], [73.0, 3715.0], [72.0, 3999.0], [78.0, 4256.0], [86.0, 4091.5], [90.0, 4395.0], [93.0, 3551.0], [6.0, 64628.0], [104.0, 4043.0], [114.0, 3839.0], [143.0, 4571.0], [196.0, 4068.0], [209.0, 5033.0], [220.0, 4222.5], [217.0, 4628.0], [236.0, 4544.0], [258.0, 4972.5], [374.0, 4136.0], [24.0, 96.0], [405.0, 4370.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 0.0], [39.0, 0.0], [40.0, 0.0], [41.0, 0.0], [42.0, 0.0], [43.0, 0.0], [44.0, 0.0], [45.0, 0.0], [49.0, 0.0], [51.0, 0.0], [61.0, 0.0], [62.0, 0.0], [73.0, 0.0], [72.0, 0.0], [78.0, 0.0], [86.0, 0.0], [90.0, 0.0], [93.0, 0.0], [6.0, 0.0], [104.0, 0.0], [114.0, 0.0], [143.0, 0.0], [196.0, 0.0], [209.0, 0.0], [220.0, 0.0], [217.0, 0.0], [236.0, 0.0], [258.0, 0.0], [1.0, 0.0], [374.0, 0.0], [405.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 405.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.65, "minX": 1.50807054E12, "maxY": 405.26666666666665, "series": [{"data": [[1.50807126E12, 42.55], [1.50807348E12, 45.583333333333336], [1.50807186E12, 143.38333333333333], [1.50807408E12, 405.26666666666665], [1.5080751E12, 44.88333333333333], [1.50807228E12, 44.55], [1.5080739E12, 43.35], [1.5080745E12, 43.7], [1.50807066E12, 43.6], [1.50807288E12, 41.25], [1.50807204E12, 40.05], [1.50807366E12, 43.43333333333333], [1.50807426E12, 43.95], [1.50807264E12, 41.083333333333336], [1.50807084E12, 45.43333333333333], [1.50807528E12, 43.88333333333333], [1.50807246E12, 104.98333333333333], [1.50807144E12, 62.55], [1.50807306E12, 72.1], [1.50807468E12, 78.93333333333334], [1.5080706E12, 54.11666666666667], [1.50807504E12, 43.3], [1.50807222E12, 44.03333333333333], [1.50807444E12, 44.75], [1.5080712E12, 44.11666666666667], [1.50807282E12, 41.733333333333334], [1.50807102E12, 49.28333333333333], [1.50807324E12, 42.18333333333333], [1.50807162E12, 45.63333333333333], [1.50807384E12, 44.35], [1.50807486E12, 43.2], [1.50807078E12, 44.083333333333336], [1.508073E12, 93.21666666666667], [1.50807522E12, 236.01666666666668], [1.5080736E12, 209.65], [1.50807138E12, 90.03333333333333], [1.50807462E12, 43.9], [1.5080718E12, 42.766666666666666], [1.50807342E12, 40.5], [1.5080724E12, 51.166666666666664], [1.50807402E12, 42.583333333333336], [1.50807156E12, 43.45], [1.50807318E12, 43.516666666666666], [1.50807216E12, 43.983333333333334], [1.50807378E12, 44.53333333333333], [1.5080748E12, 44.5], [1.50807198E12, 40.06666666666667], [1.5080742E12, 217.98333333333332], [1.50807096E12, 42.38333333333333], [1.50807258E12, 43.833333333333336], [1.50807174E12, 44.88333333333333], [1.50807396E12, 44.93333333333333], [1.50807072E12, 43.166666666666664], [1.50807234E12, 43.86666666666667], [1.50807456E12, 44.733333333333334], [1.50807438E12, 42.88333333333333], [1.50807054E12, 25.65], [1.50807276E12, 43.61666666666667], [1.50807498E12, 44.05], [1.50807114E12, 51.516666666666666], [1.50807336E12, 40.333333333333336], [1.50807414E12, 374.1333333333333], [1.50807252E12, 220.93333333333334], [1.50807474E12, 114.2], [1.5080709E12, 44.45], [1.50807312E12, 42.2], [1.50807132E12, 39.083333333333336], [1.50807294E12, 196.9], [1.50807192E12, 86.93333333333334], [1.50807354E12, 258.3], [1.50807516E12, 61.28333333333333], [1.50807108E12, 73.56666666666666], [1.5080727E12, 41.88333333333333], [1.50807168E12, 43.15], [1.5080733E12, 42.63333333333333], [1.50807492E12, 44.0], [1.5080715E12, 78.0], [1.50807372E12, 45.63333333333333], [1.5080721E12, 42.86666666666667], [1.50807432E12, 43.516666666666666], [1.50807534E12, 31.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.50807534E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.50807054E12, "maxY": 365.8666666666667, "series": [{"data": [[1.50807126E12, 37.28333333333333], [1.50807348E12, 38.666666666666664], [1.50807186E12, 34.71666666666667], [1.50807408E12, 37.516666666666666], [1.5080751E12, 39.53333333333333], [1.50807228E12, 39.56666666666667], [1.5080739E12, 38.43333333333333], [1.5080745E12, 38.13333333333333], [1.50807066E12, 39.416666666666664], [1.50807288E12, 36.016666666666666], [1.50807204E12, 34.3], [1.50807366E12, 39.516666666666666], [1.50807426E12, 39.6], [1.50807264E12, 34.233333333333334], [1.50807084E12, 38.016666666666666], [1.50807528E12, 38.56666666666667], [1.50807246E12, 38.916666666666664], [1.50807144E12, 37.016666666666666], [1.50807306E12, 39.18333333333333], [1.50807468E12, 39.95], [1.5080706E12, 51.18333333333333], [1.50807504E12, 38.06666666666667], [1.50807222E12, 39.53333333333333], [1.50807444E12, 39.35], [1.5080712E12, 37.5], [1.50807282E12, 36.9], [1.50807102E12, 36.68333333333333], [1.50807324E12, 37.13333333333333], [1.50807162E12, 39.28333333333333], [1.50807384E12, 38.583333333333336], [1.50807486E12, 37.93333333333333], [1.50807078E12, 38.416666666666664], [1.508073E12, 38.583333333333336], [1.50807522E12, 34.3], [1.5080736E12, 37.46666666666667], [1.50807138E12, 36.233333333333334], [1.50807462E12, 38.416666666666664], [1.5080718E12, 37.0], [1.50807342E12, 35.833333333333336], [1.5080724E12, 39.016666666666666], [1.50807402E12, 37.68333333333333], [1.50807156E12, 39.05], [1.50807318E12, 37.65], [1.50807216E12, 38.36666666666667], [1.50807378E12, 40.5], [1.5080754E12, 1.8833333333333333], [1.5080748E12, 38.666666666666664], [1.50807198E12, 33.916666666666664], [1.5080742E12, 37.78333333333333], [1.50807096E12, 36.88333333333333], [1.50807258E12, 39.75], [1.50807174E12, 39.2], [1.50807396E12, 40.483333333333334], [1.50807072E12, 38.983333333333334], [1.50807234E12, 39.11666666666667], [1.50807456E12, 40.15], [1.50807438E12, 37.7], [1.50807054E12, 24.783333333333335], [1.50807276E12, 38.03333333333333], [1.50807498E12, 38.5], [1.50807114E12, 38.416666666666664], [1.50807336E12, 34.68333333333333], [1.50807414E12, 37.733333333333334], [1.50807252E12, 37.56666666666667], [1.50807474E12, 38.75], [1.5080709E12, 37.21666666666667], [1.50807312E12, 37.583333333333336], [1.50807132E12, 32.166666666666664], [1.50807294E12, 36.416666666666664], [1.50807192E12, 37.833333333333336], [1.50807354E12, 36.9], [1.50807516E12, 38.45], [1.50807108E12, 38.416666666666664], [1.5080727E12, 37.13333333333333], [1.50807168E12, 38.45], [1.5080733E12, 37.28333333333333], [1.50807492E12, 38.61666666666667], [1.5080715E12, 34.81666666666667], [1.50807372E12, 38.65], [1.5080721E12, 38.5], [1.50807432E12, 37.93333333333333], [1.50807534E12, 34.333333333333336]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.50807126E12, 1.1166666666666667], [1.50807348E12, 0.7833333333333333], [1.50807186E12, 0.9], [1.50807408E12, 0.8], [1.5080751E12, 0.7333333333333333], [1.50807228E12, 0.6333333333333333], [1.5080739E12, 0.8333333333333334], [1.5080745E12, 1.0666666666666667], [1.50807066E12, 0.65], [1.50807288E12, 0.9666666666666667], [1.50807204E12, 1.0333333333333334], [1.50807366E12, 0.7333333333333333], [1.50807426E12, 0.7], [1.50807264E12, 0.9833333333333333], [1.50807084E12, 1.0833333333333333], [1.50807528E12, 0.5666666666666667], [1.50807246E12, 0.85], [1.50807144E12, 0.5833333333333334], [1.50807306E12, 0.7], [1.50807468E12, 0.5333333333333333], [1.5080706E12, 0.03333333333333333], [1.50807504E12, 1.05], [1.50807222E12, 0.8], [1.50807444E12, 0.95], [1.5080712E12, 1.0], [1.50807282E12, 0.7333333333333333], [1.50807102E12, 1.1666666666666667], [1.50807324E12, 0.8833333333333333], [1.50807162E12, 0.7166666666666667], [1.50807384E12, 0.7], [1.50807486E12, 0.75], [1.50807078E12, 1.25], [1.508073E12, 0.6833333333333333], [1.50807522E12, 0.9333333333333333], [1.5080736E12, 1.0833333333333333], [1.50807138E12, 1.2166666666666666], [1.50807462E12, 0.6666666666666666], [1.5080718E12, 1.3666666666666667], [1.50807342E12, 0.8833333333333333], [1.5080724E12, 0.8166666666666667], [1.50807402E12, 0.9166666666666666], [1.50807156E12, 0.7666666666666667], [1.50807318E12, 0.8833333333333333], [1.50807216E12, 0.8666666666666667], [1.50807378E12, 0.7333333333333333], [1.5080748E12, 0.9833333333333333], [1.50807198E12, 1.1166666666666667], [1.5080742E12, 0.9], [1.50807096E12, 1.3166666666666667], [1.50807258E12, 0.7833333333333333], [1.50807174E12, 0.7], [1.50807396E12, 0.6], [1.50807072E12, 0.6], [1.50807234E12, 0.7333333333333333], [1.50807456E12, 0.8333333333333334], [1.50807438E12, 0.8], [1.50807276E12, 0.6833333333333333], [1.50807498E12, 0.9833333333333333], [1.50807114E12, 0.7833333333333333], [1.50807336E12, 0.9], [1.50807414E12, 0.6833333333333333], [1.50807252E12, 0.6], [1.50807474E12, 0.6833333333333333], [1.5080709E12, 1.4833333333333334], [1.50807312E12, 0.8666666666666667], [1.50807132E12, 1.4666666666666666], [1.50807294E12, 0.8666666666666667], [1.50807192E12, 0.5166666666666667], [1.50807354E12, 0.7833333333333333], [1.50807516E12, 0.9166666666666666], [1.50807108E12, 1.1333333333333333], [1.5080727E12, 0.7833333333333333], [1.50807168E12, 0.8], [1.5080733E12, 0.8666666666666667], [1.50807492E12, 0.8666666666666667], [1.5080715E12, 1.2], [1.50807372E12, 0.8833333333333333], [1.5080721E12, 0.95], [1.50807432E12, 0.8], [1.50807534E12, 0.7833333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.50807126E12, 3.0166666666666666], [1.50807348E12, 4.566666666666666], [1.50807186E12, 106.43333333333334], [1.50807408E12, 365.8666666666667], [1.5080751E12, 3.1166666666666667], [1.50807228E12, 3.216666666666667], [1.5080739E12, 2.6166666666666667], [1.5080745E12, 3.15], [1.50807288E12, 2.783333333333333], [1.50807204E12, 3.25], [1.50807366E12, 1.8333333333333333], [1.50807426E12, 2.6666666666666665], [1.50807264E12, 4.35], [1.50807084E12, 2.05], [1.50807528E12, 3.4], [1.50807246E12, 63.95], [1.50807144E12, 23.333333333333332], [1.50807306E12, 30.966666666666665], [1.50807468E12, 37.18333333333333], [1.50807504E12, 2.816666666666667], [1.50807222E12, 2.466666666666667], [1.50807444E12, 3.55], [1.5080712E12, 4.4], [1.50807282E12, 2.7], [1.50807102E12, 10.15], [1.50807324E12, 2.55], [1.50807546E12, 0.15], [1.50807162E12, 3.966666666666667], [1.50807384E12, 3.6166666666666667], [1.50807486E12, 3.1666666666666665], [1.50807078E12, 0.7833333333333333], [1.508073E12, 52.56666666666667], [1.50807522E12, 199.16666666666666], [1.5080736E12, 169.91666666666666], [1.50807138E12, 51.35], [1.50807462E12, 3.4], [1.5080718E12, 2.9], [1.50807342E12, 2.6166666666666667], [1.5080724E12, 10.116666666666667], [1.50807402E12, 2.966666666666667], [1.50807156E12, 2.2333333333333334], [1.50807318E12, 3.55], [1.50807216E12, 3.683333333333333], [1.50807378E12, 2.0166666666666666], [1.5080754E12, 2.5], [1.5080748E12, 3.283333333333333], [1.50807198E12, 3.566666666666667], [1.5080742E12, 178.03333333333333], [1.50807096E12, 3.216666666666667], [1.50807258E12, 1.8833333333333333], [1.50807174E12, 3.6333333333333333], [1.50807396E12, 2.7], [1.50807072E12, 0.05], [1.50807234E12, 2.7333333333333334], [1.50807456E12, 2.5166666666666666], [1.50807438E12, 3.033333333333333], [1.50807276E12, 3.5166666666666666], [1.50807498E12, 3.0], [1.50807114E12, 11.15], [1.50807336E12, 2.9166666666666665], [1.50807414E12, 334.43333333333334], [1.50807252E12, 181.1], [1.50807474E12, 73.46666666666667], [1.5080709E12, 2.716666666666667], [1.50807312E12, 2.5166666666666666], [1.50807132E12, 3.683333333333333], [1.50807294E12, 158.3], [1.50807192E12, 47.31666666666667], [1.50807354E12, 219.33333333333334], [1.50807516E12, 20.383333333333333], [1.50807108E12, 32.6], [1.5080727E12, 2.4833333333333334], [1.50807168E12, 2.7], [1.5080733E12, 3.0], [1.50807492E12, 3.2], [1.5080715E12, 40.86666666666667], [1.50807372E12, 4.366666666666666], [1.5080721E12, 2.35], [1.50807432E12, 3.783333333333333], [1.50807534E12, 3.3666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.ConnectException", "isController": false}, {"data": [[1.50807126E12, 0.7333333333333333], [1.50807348E12, 0.8666666666666667], [1.50807186E12, 0.7833333333333333], [1.50807408E12, 0.5], [1.5080751E12, 0.9], [1.50807228E12, 0.7333333333333333], [1.5080739E12, 0.8833333333333333], [1.5080745E12, 0.7666666666666667], [1.50807066E12, 0.7333333333333333], [1.50807288E12, 0.9166666666666666], [1.50807204E12, 1.1166666666666667], [1.50807366E12, 0.9833333333333333], [1.50807426E12, 0.6], [1.50807264E12, 0.8833333333333333], [1.50807084E12, 1.2166666666666666], [1.50807528E12, 0.8166666666666667], [1.50807246E12, 0.5666666666666667], [1.50807144E12, 0.8833333333333333], [1.50807306E12, 0.75], [1.50807468E12, 0.6166666666666667], [1.5080706E12, 0.13333333333333333], [1.50807504E12, 0.7166666666666667], [1.50807222E12, 0.8333333333333334], [1.50807444E12, 0.3333333333333333], [1.5080712E12, 0.9333333333333333], [1.50807282E12, 0.8], [1.50807102E12, 0.9], [1.50807324E12, 0.9], [1.50807162E12, 1.2333333333333334], [1.50807384E12, 0.7666666666666667], [1.50807486E12, 0.9333333333333333], [1.50807078E12, 0.7166666666666667], [1.508073E12, 0.7], [1.50807522E12, 0.7666666666666667], [1.5080736E12, 0.6166666666666667], [1.50807138E12, 0.85], [1.50807462E12, 0.8333333333333334], [1.5080718E12, 0.9833333333333333], [1.50807342E12, 0.8333333333333334], [1.5080724E12, 0.6333333333333333], [1.50807402E12, 0.43333333333333335], [1.50807156E12, 1.0333333333333334], [1.50807318E12, 0.8333333333333334], [1.50807216E12, 0.48333333333333334], [1.50807378E12, 0.8333333333333334], [1.5080754E12, 0.016666666666666666], [1.5080748E12, 0.7333333333333333], [1.50807198E12, 0.9333333333333333], [1.5080742E12, 0.6], [1.50807096E12, 0.7], [1.50807258E12, 0.9166666666666666], [1.50807174E12, 0.7666666666666667], [1.50807396E12, 0.6166666666666667], [1.50807072E12, 0.6166666666666667], [1.50807234E12, 0.6333333333333333], [1.50807456E12, 0.9333333333333333], [1.50807438E12, 0.8166666666666667], [1.50807276E12, 0.9166666666666666], [1.50807498E12, 1.0333333333333334], [1.50807114E12, 0.7333333333333333], [1.50807336E12, 1.1166666666666667], [1.50807414E12, 0.3], [1.50807252E12, 0.45], [1.50807474E12, 0.8166666666666667], [1.5080709E12, 0.75], [1.50807312E12, 0.9166666666666666], [1.50807132E12, 1.2], [1.50807294E12, 0.5833333333333334], [1.50807192E12, 0.8666666666666667], [1.50807354E12, 0.48333333333333334], [1.50807516E12, 0.8166666666666667], [1.50807108E12, 0.75], [1.5080727E12, 0.9166666666666666], [1.50807168E12, 0.6], [1.5080733E12, 0.8833333333333333], [1.50807492E12, 0.6166666666666667], [1.5080715E12, 0.7], [1.50807372E12, 1.1833333333333333], [1.5080721E12, 0.65], [1.50807432E12, 0.5833333333333334], [1.50807534E12, 0.7833333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.50807126E12, 0.4], [1.50807348E12, 0.7], [1.50807186E12, 0.55], [1.50807408E12, 0.5833333333333334], [1.5080751E12, 0.6], [1.50807228E12, 0.4], [1.5080739E12, 0.5833333333333334], [1.5080745E12, 0.5833333333333334], [1.50807066E12, 0.016666666666666666], [1.50807288E12, 0.5666666666666667], [1.50807204E12, 0.35], [1.50807366E12, 0.36666666666666664], [1.50807426E12, 0.38333333333333336], [1.50807264E12, 0.6333333333333333], [1.50807084E12, 0.2833333333333333], [1.50807528E12, 0.5333333333333333], [1.50807246E12, 0.7], [1.50807144E12, 0.7333333333333333], [1.50807306E12, 0.48333333333333334], [1.50807468E12, 0.65], [1.50807504E12, 0.65], [1.50807222E12, 0.4], [1.50807444E12, 0.5666666666666667], [1.5080712E12, 0.2833333333333333], [1.50807282E12, 0.6], [1.50807102E12, 0.38333333333333336], [1.50807324E12, 0.7166666666666667], [1.50807546E12, 1.4666666666666666], [1.50807162E12, 0.43333333333333335], [1.50807384E12, 0.6833333333333333], [1.50807486E12, 0.4], [1.50807078E12, 0.15], [1.508073E12, 0.7], [1.50807522E12, 0.85], [1.5080736E12, 0.5666666666666667], [1.50807138E12, 0.38333333333333336], [1.50807462E12, 0.5833333333333334], [1.5080718E12, 0.5166666666666667], [1.50807342E12, 0.3333333333333333], [1.5080724E12, 0.5833333333333334], [1.50807402E12, 0.5833333333333334], [1.50807156E12, 0.36666666666666664], [1.50807318E12, 0.6], [1.50807216E12, 0.5833333333333334], [1.50807378E12, 0.45], [1.5080754E12, 2.1], [1.5080748E12, 0.85], [1.50807198E12, 0.5333333333333333], [1.5080742E12, 0.6666666666666666], [1.50807096E12, 0.26666666666666666], [1.50807258E12, 0.5], [1.50807174E12, 0.5833333333333334], [1.50807396E12, 0.5333333333333333], [1.50807072E12, 0.13333333333333333], [1.50807234E12, 0.65], [1.50807456E12, 0.3], [1.50807558E12, 0.05], [1.50807438E12, 0.5333333333333333], [1.50807276E12, 0.4666666666666667], [1.50807498E12, 0.5333333333333333], [1.50807114E12, 0.43333333333333335], [1.50807336E12, 0.7166666666666667], [1.50807414E12, 0.9833333333333333], [1.50807252E12, 1.2166666666666666], [1.50807474E12, 0.48333333333333334], [1.5080709E12, 0.36666666666666664], [1.50807312E12, 0.31666666666666665], [1.50807132E12, 0.5666666666666667], [1.50807294E12, 0.7333333333333333], [1.50807192E12, 0.4], [1.50807354E12, 0.8], [1.50807516E12, 0.7166666666666667], [1.50807108E12, 0.6666666666666666], [1.5080727E12, 0.5666666666666667], [1.50807168E12, 0.6], [1.5080733E12, 0.6], [1.50807492E12, 0.7], [1.5080715E12, 0.4166666666666667], [1.50807372E12, 0.55], [1.5080721E12, 0.4166666666666667], [1.50807432E12, 0.4166666666666667], [1.50807534E12, 1.0333333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.50807558E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.50807054E12, "maxY": 367.75, "series": [{"data": [[1.50807126E12, 37.28333333333333], [1.50807348E12, 38.666666666666664], [1.50807186E12, 34.71666666666667], [1.50807408E12, 37.516666666666666], [1.5080751E12, 39.53333333333333], [1.50807228E12, 39.56666666666667], [1.5080739E12, 38.43333333333333], [1.5080745E12, 38.13333333333333], [1.50807066E12, 39.416666666666664], [1.50807288E12, 36.016666666666666], [1.50807204E12, 34.3], [1.50807366E12, 39.516666666666666], [1.50807426E12, 39.6], [1.50807264E12, 34.233333333333334], [1.50807084E12, 38.016666666666666], [1.50807528E12, 38.56666666666667], [1.50807246E12, 38.916666666666664], [1.50807144E12, 37.016666666666666], [1.50807306E12, 39.18333333333333], [1.50807468E12, 39.95], [1.5080706E12, 51.18333333333333], [1.50807504E12, 38.06666666666667], [1.50807222E12, 39.53333333333333], [1.50807444E12, 39.35], [1.5080712E12, 37.5], [1.50807282E12, 36.9], [1.50807102E12, 36.68333333333333], [1.50807324E12, 37.13333333333333], [1.50807162E12, 39.28333333333333], [1.50807384E12, 38.583333333333336], [1.50807486E12, 37.93333333333333], [1.50807078E12, 38.416666666666664], [1.508073E12, 38.583333333333336], [1.50807522E12, 34.3], [1.5080736E12, 37.46666666666667], [1.50807138E12, 36.233333333333334], [1.50807462E12, 38.416666666666664], [1.5080718E12, 37.0], [1.50807342E12, 35.833333333333336], [1.5080724E12, 39.016666666666666], [1.50807402E12, 37.68333333333333], [1.50807156E12, 39.05], [1.50807318E12, 37.65], [1.50807216E12, 38.36666666666667], [1.50807378E12, 40.5], [1.5080754E12, 1.8833333333333333], [1.5080748E12, 38.666666666666664], [1.50807198E12, 33.916666666666664], [1.5080742E12, 37.78333333333333], [1.50807096E12, 36.88333333333333], [1.50807258E12, 39.75], [1.50807174E12, 39.2], [1.50807396E12, 40.483333333333334], [1.50807072E12, 38.983333333333334], [1.50807234E12, 39.11666666666667], [1.50807456E12, 40.15], [1.50807438E12, 37.7], [1.50807054E12, 24.783333333333335], [1.50807276E12, 38.03333333333333], [1.50807498E12, 38.5], [1.50807114E12, 38.416666666666664], [1.50807336E12, 34.68333333333333], [1.50807414E12, 37.733333333333334], [1.50807252E12, 37.56666666666667], [1.50807474E12, 38.75], [1.5080709E12, 37.21666666666667], [1.50807312E12, 37.583333333333336], [1.50807132E12, 32.166666666666664], [1.50807294E12, 36.416666666666664], [1.50807192E12, 37.833333333333336], [1.50807354E12, 36.9], [1.50807516E12, 38.45], [1.50807108E12, 38.416666666666664], [1.5080727E12, 37.13333333333333], [1.50807168E12, 38.45], [1.5080733E12, 37.28333333333333], [1.50807492E12, 38.61666666666667], [1.5080715E12, 34.81666666666667], [1.50807372E12, 38.65], [1.5080721E12, 38.5], [1.50807432E12, 37.93333333333333], [1.50807534E12, 34.333333333333336]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.50807126E12, 5.266666666666667], [1.50807348E12, 6.916666666666667], [1.50807186E12, 108.66666666666667], [1.50807408E12, 367.75], [1.5080751E12, 5.35], [1.50807228E12, 4.983333333333333], [1.5080739E12, 4.916666666666667], [1.5080745E12, 5.566666666666666], [1.50807066E12, 1.4], [1.50807288E12, 5.233333333333333], [1.50807204E12, 5.75], [1.50807366E12, 3.9166666666666665], [1.50807426E12, 4.35], [1.50807264E12, 6.85], [1.50807084E12, 4.633333333333334], [1.50807528E12, 5.316666666666666], [1.50807246E12, 66.06666666666666], [1.50807144E12, 25.533333333333335], [1.50807306E12, 32.9], [1.50807468E12, 38.983333333333334], [1.5080706E12, 0.16666666666666666], [1.50807504E12, 5.233333333333333], [1.50807222E12, 4.5], [1.50807444E12, 5.4], [1.5080712E12, 6.616666666666666], [1.50807282E12, 4.833333333333333], [1.50807102E12, 12.6], [1.50807324E12, 5.05], [1.50807546E12, 1.6166666666666667], [1.50807162E12, 6.35], [1.50807384E12, 5.766666666666667], [1.50807486E12, 5.25], [1.50807078E12, 2.9], [1.508073E12, 54.65], [1.50807522E12, 201.71666666666667], [1.5080736E12, 172.18333333333334], [1.50807138E12, 53.8], [1.50807462E12, 5.483333333333333], [1.5080718E12, 5.766666666666667], [1.50807342E12, 4.666666666666667], [1.5080724E12, 12.15], [1.50807402E12, 4.9], [1.50807156E12, 4.4], [1.50807318E12, 5.866666666666666], [1.50807216E12, 5.616666666666666], [1.50807378E12, 4.033333333333333], [1.5080754E12, 4.616666666666666], [1.5080748E12, 5.85], [1.50807198E12, 6.15], [1.5080742E12, 180.2], [1.50807096E12, 5.5], [1.50807258E12, 4.083333333333333], [1.50807174E12, 5.683333333333334], [1.50807396E12, 4.45], [1.50807072E12, 1.4], [1.50807234E12, 4.75], [1.50807456E12, 4.583333333333333], [1.50807558E12, 0.05], [1.50807438E12, 5.183333333333334], [1.50807276E12, 5.583333333333333], [1.50807498E12, 5.55], [1.50807114E12, 13.1], [1.50807336E12, 5.65], [1.50807414E12, 336.4], [1.50807252E12, 183.36666666666667], [1.50807474E12, 75.45], [1.5080709E12, 5.316666666666666], [1.50807312E12, 4.616666666666666], [1.50807132E12, 6.916666666666667], [1.50807294E12, 160.48333333333332], [1.50807192E12, 49.1], [1.50807354E12, 221.4], [1.50807516E12, 22.833333333333332], [1.50807108E12, 35.15], [1.5080727E12, 4.75], [1.50807168E12, 4.7], [1.5080733E12, 5.35], [1.50807492E12, 5.383333333333334], [1.5080715E12, 43.18333333333333], [1.50807372E12, 6.983333333333333], [1.5080721E12, 4.366666666666666], [1.50807432E12, 5.583333333333333], [1.50807534E12, 5.966666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.50807558E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
